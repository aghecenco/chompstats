[{"user": {"following_url": "https://api.github.com/users/rn/following{/other_user}", "url": "https://api.github.com/users/rn", "site_admin": false, "gists_url": "https://api.github.com/users/rn/gists{/gist_id}", "node_id": "MDQ6VXNlcjMzMzgwOTg=", "starred_url": "https://api.github.com/users/rn/starred{/owner}{/repo}", "gravatar_id": "", "id": 3338098, "events_url": "https://api.github.com/users/rn/events{/privacy}", "avatar_url": "https://avatars0.githubusercontent.com/u/3338098?v=4", "login": "rn", "repos_url": "https://api.github.com/users/rn/repos", "subscriptions_url": "https://api.github.com/users/rn/subscriptions", "followers_url": "https://api.github.com/users/rn/followers", "html_url": "https://github.com/rn", "received_events_url": "https://api.github.com/users/rn/received_events", "type": "User", "organizations_url": "https://api.github.com/users/rn/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/community/issues/29", "body": "This looks like quite a chunky component. Is the intention to eventually break this up? For example, there is a proposed [`linux-loader`](https://github.com/rust-vmm/community/issues/24) component which seems to have some overlap with the bzImage loader you mention. Also a FAT32 filesystem implementation might be a useful separate component.", "updated_at": "2019-02-27T20:33:11Z", "url": "https://api.github.com/repos/rust-vmm/community/issues/comments/468019245", "author_association": "NONE", "html_url": "https://github.com/rust-vmm/community/issues/29#issuecomment-468019245", "created_at": "2019-02-27T20:33:11Z", "id": 468019245, "node_id": "MDEyOklzc3VlQ29tbWVudDQ2ODAxOTI0NQ=="}, {"user": {"following_url": "https://api.github.com/users/bjzhjing/following{/other_user}", "url": "https://api.github.com/users/bjzhjing", "site_admin": false, "gists_url": "https://api.github.com/users/bjzhjing/gists{/gist_id}", "node_id": "MDQ6VXNlcjQ2NjYxODA2", "starred_url": "https://api.github.com/users/bjzhjing/starred{/owner}{/repo}", "gravatar_id": "", "id": 46661806, "events_url": "https://api.github.com/users/bjzhjing/events{/privacy}", "avatar_url": "https://avatars0.githubusercontent.com/u/46661806?v=4", "login": "bjzhjing", "repos_url": "https://api.github.com/users/bjzhjing/repos", "subscriptions_url": "https://api.github.com/users/bjzhjing/subscriptions", "followers_url": "https://api.github.com/users/bjzhjing/followers", "html_url": "https://github.com/bjzhjing", "received_events_url": "https://api.github.com/users/bjzhjing/received_events", "type": "User", "organizations_url": "https://api.github.com/users/bjzhjing/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/community/issues/29", "body": "@rbradford I'm currently working on linux-loader for bzImage, but from the above description, it seems that the hypervisor-firmware covers the loader work for bzImage,  is linux-loader still in need? ", "updated_at": "2019-02-28T06:53:11Z", "url": "https://api.github.com/repos/rust-vmm/community/issues/comments/468159276", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/community/issues/29#issuecomment-468159276", "created_at": "2019-02-28T06:53:11Z", "id": 468159276, "node_id": "MDEyOklzc3VlQ29tbWVudDQ2ODE1OTI3Ng=="}, {"user": {"following_url": "https://api.github.com/users/rn/following{/other_user}", "url": "https://api.github.com/users/rn", "site_admin": false, "gists_url": "https://api.github.com/users/rn/gists{/gist_id}", "node_id": "MDQ6VXNlcjMzMzgwOTg=", "starred_url": "https://api.github.com/users/rn/starred{/owner}{/repo}", "gravatar_id": "", "id": 3338098, "events_url": "https://api.github.com/users/rn/events{/privacy}", "avatar_url": "https://avatars0.githubusercontent.com/u/3338098?v=4", "login": "rn", "repos_url": "https://api.github.com/users/rn/repos", "subscriptions_url": "https://api.github.com/users/rn/subscriptions", "followers_url": "https://api.github.com/users/rn/followers", "html_url": "https://github.com/rn", "received_events_url": "https://api.github.com/users/rn/received_events", "type": "User", "organizations_url": "https://api.github.com/users/rn/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/community/issues/29", "body": "I think we need a standalone loader, not all VMs will boot via the firmware method. Ideally `hypervisor-firmware` would re-use `linux-loader` for bzImage once available.", "updated_at": "2019-02-28T09:31:34Z", "url": "https://api.github.com/repos/rust-vmm/community/issues/comments/468201926", "author_association": "NONE", "html_url": "https://github.com/rust-vmm/community/issues/29#issuecomment-468201926", "created_at": "2019-02-28T09:31:34Z", "id": 468201926, "node_id": "MDEyOklzc3VlQ29tbWVudDQ2ODIwMTkyNg=="}, {"user": {"following_url": "https://api.github.com/users/jiangliu/following{/other_user}", "url": "https://api.github.com/users/jiangliu", "site_admin": false, "gists_url": "https://api.github.com/users/jiangliu/gists{/gist_id}", "node_id": "MDQ6VXNlcjE5MzE1MTY=", "starred_url": "https://api.github.com/users/jiangliu/starred{/owner}{/repo}", "gravatar_id": "", "id": 1931516, "events_url": "https://api.github.com/users/jiangliu/events{/privacy}", "avatar_url": "https://avatars0.githubusercontent.com/u/1931516?v=4", "login": "jiangliu", "repos_url": "https://api.github.com/users/jiangliu/repos", "subscriptions_url": "https://api.github.com/users/jiangliu/subscriptions", "followers_url": "https://api.github.com/users/jiangliu/followers", "html_url": "https://github.com/jiangliu", "received_events_url": "https://api.github.com/users/jiangliu/received_events", "type": "User", "organizations_url": "https://api.github.com/users/jiangliu/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/community/issues/29", "body": "Hypervisor-firmware seems a little heavy, split it into smaller crates would be preferred:)\nBut we do expect a loader with capability to parse kernel sections other than parsing the program headers.\n\n> On Feb 28, 2019, at 5:31 PM, Rolf Neugebauer <notifications@github.com <mailto:notifications@github.com>> wrote:\n> \n> I think we need a standalone loader, not all VMs will boot via the firmware method. Ideally hypervisor-firmware would re-use linux-loader for bzImage once available.\n> \n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub <https://github.com/rust-vmm/community/issues/29#issuecomment-468201926>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AB14_NEvyqigNSbKGYYimVmrgLL12QcOks5vR6H3gaJpZM4bUXEt>.\n> \n\n", "updated_at": "2019-02-28T09:42:15Z", "url": "https://api.github.com/repos/rust-vmm/community/issues/comments/468205505", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/community/issues/29#issuecomment-468205505", "created_at": "2019-02-28T09:42:15Z", "id": 468205505, "node_id": "MDEyOklzc3VlQ29tbWVudDQ2ODIwNTUwNQ=="}, {"user": {"following_url": "https://api.github.com/users/rbradford/following{/other_user}", "url": "https://api.github.com/users/rbradford", "site_admin": false, "gists_url": "https://api.github.com/users/rbradford/gists{/gist_id}", "node_id": "MDQ6VXNlcjU4ODIyNA==", "starred_url": "https://api.github.com/users/rbradford/starred{/owner}{/repo}", "gravatar_id": "", "id": 588224, "events_url": "https://api.github.com/users/rbradford/events{/privacy}", "avatar_url": "https://avatars0.githubusercontent.com/u/588224?v=4", "login": "rbradford", "repos_url": "https://api.github.com/users/rbradford/repos", "subscriptions_url": "https://api.github.com/users/rbradford/subscriptions", "followers_url": "https://api.github.com/users/rbradford/followers", "html_url": "https://github.com/rbradford", "received_events_url": "https://api.github.com/users/rbradford/received_events", "type": "User", "organizations_url": "https://api.github.com/users/rbradford/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/community/issues/29", "body": "> @rbradford I'm currently working on linux-loader for bzImage, but from the above description, it seems that the hypervisor-firmware covers the loader work for bzImage, is linux-loader still in need?\r\n\r\nIt's not the same thing. The linux-loader crate is for loading the kernel fully under the control of the host, for .e.g. the container use-case where the customer does not get full control of their operating system. This component is instead loaded by the linux-loader and then running within the KVM environment can then load the guest kernel. This allows for use-cases that are more traditional VM focused without then need to port an existing firmware such as OVMF or Seabios.", "updated_at": "2019-02-28T10:28:10Z", "url": "https://api.github.com/repos/rust-vmm/community/issues/comments/468220666", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/community/issues/29#issuecomment-468220666", "created_at": "2019-02-28T10:28:10Z", "id": 468220666, "node_id": "MDEyOklzc3VlQ29tbWVudDQ2ODIyMDY2Ng=="}, {"user": {"following_url": "https://api.github.com/users/rbradford/following{/other_user}", "url": "https://api.github.com/users/rbradford", "site_admin": false, "gists_url": "https://api.github.com/users/rbradford/gists{/gist_id}", "node_id": "MDQ6VXNlcjU4ODIyNA==", "starred_url": "https://api.github.com/users/rbradford/starred{/owner}{/repo}", "gravatar_id": "", "id": 588224, "events_url": "https://api.github.com/users/rbradford/events{/privacy}", "avatar_url": "https://avatars0.githubusercontent.com/u/588224?v=4", "login": "rbradford", "repos_url": "https://api.github.com/users/rbradford/repos", "subscriptions_url": "https://api.github.com/users/rbradford/subscriptions", "followers_url": "https://api.github.com/users/rbradford/followers", "html_url": "https://github.com/rbradford", "received_events_url": "https://api.github.com/users/rbradford/received_events", "type": "User", "organizations_url": "https://api.github.com/users/rbradford/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/community/issues/29", "body": "> I think we need a standalone loader, not all VMs will boot via the firmware method. Ideally `hypervisor-firmware` would re-use `linux-loader` for bzImage once available.\r\n\r\nThe challenge with this proposed reuse is the environment they run in is very different. Running from within the guest means there is no std and the code is very tailored to the environment (own filesystem implementation, etc)\r\n\r\nOf course once the code is published maybe we see ways to reuse/split the code.", "updated_at": "2019-02-28T11:29:36Z", "url": "https://api.github.com/repos/rust-vmm/community/issues/comments/468239213", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/community/issues/29#issuecomment-468239213", "created_at": "2019-02-28T11:29:36Z", "id": 468239213, "node_id": "MDEyOklzc3VlQ29tbWVudDQ2ODIzOTIxMw=="}, {"user": {"following_url": "https://api.github.com/users/rn/following{/other_user}", "url": "https://api.github.com/users/rn", "site_admin": false, "gists_url": "https://api.github.com/users/rn/gists{/gist_id}", "node_id": "MDQ6VXNlcjMzMzgwOTg=", "starred_url": "https://api.github.com/users/rn/starred{/owner}{/repo}", "gravatar_id": "", "id": 3338098, "events_url": "https://api.github.com/users/rn/events{/privacy}", "avatar_url": "https://avatars0.githubusercontent.com/u/3338098?v=4", "login": "rn", "repos_url": "https://api.github.com/users/rn/repos", "subscriptions_url": "https://api.github.com/users/rn/subscriptions", "followers_url": "https://api.github.com/users/rn/followers", "html_url": "https://github.com/rn", "received_events_url": "https://api.github.com/users/rn/received_events", "type": "User", "organizations_url": "https://api.github.com/users/rn/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/community/issues/29", "body": "@rbradford thanks for clarifying, I think I've misunderstood how this component would be used.", "updated_at": "2019-02-28T14:53:36Z", "url": "https://api.github.com/repos/rust-vmm/community/issues/comments/468301867", "author_association": "NONE", "html_url": "https://github.com/rust-vmm/community/issues/29#issuecomment-468301867", "created_at": "2019-02-28T14:53:36Z", "id": 468301867, "node_id": "MDEyOklzc3VlQ29tbWVudDQ2ODMwMTg2Nw=="}, {"user": {"following_url": "https://api.github.com/users/yangzhon/following{/other_user}", "url": "https://api.github.com/users/yangzhon", "site_admin": false, "gists_url": "https://api.github.com/users/yangzhon/gists{/gist_id}", "node_id": "MDQ6VXNlcjI4NTgzMzI4", "starred_url": "https://api.github.com/users/yangzhon/starred{/owner}{/repo}", "gravatar_id": "", "id": 28583328, "events_url": "https://api.github.com/users/yangzhon/events{/privacy}", "avatar_url": "https://avatars2.githubusercontent.com/u/28583328?v=4", "login": "yangzhon", "repos_url": "https://api.github.com/users/yangzhon/repos", "subscriptions_url": "https://api.github.com/users/yangzhon/subscriptions", "followers_url": "https://api.github.com/users/yangzhon/followers", "html_url": "https://github.com/yangzhon", "received_events_url": "https://api.github.com/users/yangzhon/received_events", "type": "User", "organizations_url": "https://api.github.com/users/yangzhon/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/community/issues/29", "body": "@rbradford @sameo \r\n\r\nDo you have plan to implement patching ACPI table in this firmware ? Since we need support ACPI crates and send those ACPI tables to guest kernel. If your firmware does not handle this, we need implement patching ACPI table in VMM side. thanks!\r\n", "updated_at": "2019-03-15T03:11:05Z", "url": "https://api.github.com/repos/rust-vmm/community/issues/comments/473142893", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/community/issues/29#issuecomment-473142893", "created_at": "2019-03-15T03:11:05Z", "id": 473142893, "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MzE0Mjg5Mw=="}, {"user": {"following_url": "https://api.github.com/users/bonzini/following{/other_user}", "url": "https://api.github.com/users/bonzini", "site_admin": false, "gists_url": "https://api.github.com/users/bonzini/gists{/gist_id}", "node_id": "MDQ6VXNlcjQyMDgy", "starred_url": "https://api.github.com/users/bonzini/starred{/owner}{/repo}", "gravatar_id": "", "id": 42082, "events_url": "https://api.github.com/users/bonzini/events{/privacy}", "avatar_url": "https://avatars2.githubusercontent.com/u/42082?v=4", "login": "bonzini", "repos_url": "https://api.github.com/users/bonzini/repos", "subscriptions_url": "https://api.github.com/users/bonzini/subscriptions", "followers_url": "https://api.github.com/users/bonzini/followers", "html_url": "https://github.com/bonzini", "received_events_url": "https://api.github.com/users/bonzini/received_events", "type": "User", "organizations_url": "https://api.github.com/users/bonzini/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/community/issues/29", "body": "Any reason not to use uBoot for this instead? It already supports a minimal UEFI runtime, and can be loaded directly from the reset vector.", "updated_at": "2019-03-26T13:23:36Z", "url": "https://api.github.com/repos/rust-vmm/community/issues/comments/476631118", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/community/issues/29#issuecomment-476631118", "created_at": "2019-03-26T13:23:36Z", "id": 476631118, "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NjYzMTExOA=="}, {"user": {"following_url": "https://api.github.com/users/rbradford/following{/other_user}", "url": "https://api.github.com/users/rbradford", "site_admin": false, "gists_url": "https://api.github.com/users/rbradford/gists{/gist_id}", "node_id": "MDQ6VXNlcjU4ODIyNA==", "starred_url": "https://api.github.com/users/rbradford/starred{/owner}{/repo}", "gravatar_id": "", "id": 588224, "events_url": "https://api.github.com/users/rbradford/events{/privacy}", "avatar_url": "https://avatars0.githubusercontent.com/u/588224?v=4", "login": "rbradford", "repos_url": "https://api.github.com/users/rbradford/repos", "subscriptions_url": "https://api.github.com/users/rbradford/subscriptions", "followers_url": "https://api.github.com/users/rbradford/followers", "html_url": "https://github.com/rbradford", "received_events_url": "https://api.github.com/users/rbradford/received_events", "type": "User", "organizations_url": "https://api.github.com/users/rbradford/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/community/issues/29", "body": "@bonzini I'm sure it would be possible to make u-boot work. And the UEFI runtime code there is indeed very mature. The motivation for doing it this way is:\r\n\r\n* Have something that is directly compatible with the existing ELF kernel loader with the binary started in long mode.\r\n* Demonstrate that it is possible to build a firmware in languages other than C, and getting benefits from a \"safe\" language like Rust.\r\n\r\nTo be clear i'm not proposing that this is the exclusive solution for firmware in this project, merely proposing that it be hosted here. ", "updated_at": "2019-04-01T14:44:09Z", "url": "https://api.github.com/repos/rust-vmm/community/issues/comments/478608717", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/community/issues/29#issuecomment-478608717", "created_at": "2019-04-01T14:44:09Z", "id": 478608717, "node_id": "MDEyOklzc3VlQ29tbWVudDQ3ODYwODcxNw=="}, {"user": {"following_url": "https://api.github.com/users/bonzini/following{/other_user}", "url": "https://api.github.com/users/bonzini", "site_admin": false, "gists_url": "https://api.github.com/users/bonzini/gists{/gist_id}", "node_id": "MDQ6VXNlcjQyMDgy", "starred_url": "https://api.github.com/users/bonzini/starred{/owner}{/repo}", "gravatar_id": "", "id": 42082, "events_url": "https://api.github.com/users/bonzini/events{/privacy}", "avatar_url": "https://avatars2.githubusercontent.com/u/42082?v=4", "login": "bonzini", "repos_url": "https://api.github.com/users/bonzini/repos", "subscriptions_url": "https://api.github.com/users/bonzini/subscriptions", "followers_url": "https://api.github.com/users/bonzini/followers", "html_url": "https://github.com/bonzini", "received_events_url": "https://api.github.com/users/bonzini/received_events", "type": "User", "organizations_url": "https://api.github.com/users/bonzini/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/community/issues/29", "body": "I'm still not sure why this firmware would be a `rust-vmm` component, it seems pretty closely tied to the design of [intel/cloud-hypervisor](https://github.com/intel/cloud-hypervisor).", "updated_at": "2019-06-03T09:26:25Z", "url": "https://api.github.com/repos/rust-vmm/community/issues/comments/498182279", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/community/issues/29#issuecomment-498182279", "created_at": "2019-06-03T09:26:25Z", "id": 498182279, "node_id": "MDEyOklzc3VlQ29tbWVudDQ5ODE4MjI3OQ=="}]