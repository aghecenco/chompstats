[{"user": {"following_url": "https://api.github.com/users/jiangliu/following{/other_user}", "url": "https://api.github.com/users/jiangliu", "site_admin": false, "gists_url": "https://api.github.com/users/jiangliu/gists{/gist_id}", "node_id": "MDQ6VXNlcjE5MzE1MTY=", "starred_url": "https://api.github.com/users/jiangliu/starred{/owner}{/repo}", "gravatar_id": "", "id": 1931516, "events_url": "https://api.github.com/users/jiangliu/events{/privacy}", "avatar_url": "https://avatars0.githubusercontent.com/u/1931516?v=4", "login": "jiangliu", "repos_url": "https://api.github.com/users/jiangliu/repos", "subscriptions_url": "https://api.github.com/users/jiangliu/subscriptions", "followers_url": "https://api.github.com/users/jiangliu/followers", "html_url": "https://github.com/jiangliu", "received_events_url": "https://api.github.com/users/jiangliu/received_events", "type": "User", "organizations_url": "https://api.github.com/users/jiangliu/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/vm-device/issues/8", "body": "> Overall I believe all the source code under interrupt/kvm_irq should be part of VMM code instead of vm-device, in vm-device we don't need it at all. The only thing we do need is the trait definitions in interrupt/mod.rs\r\n\r\nIt depends.\r\nThe irq manager implementation is generic enough, it just mimics hardware behaviors. \r\nIf we move the irq manager implementation into vmm, it means each vmm needs to repeat the same code.", "updated_at": "2019-09-10T08:24:13Z", "url": "https://api.github.com/repos/rust-vmm/vm-device/issues/comments/529829145", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/vm-device/pull/8#issuecomment-529829145", "created_at": "2019-09-10T08:24:13Z", "id": 529829145, "node_id": "MDEyOklzc3VlQ29tbWVudDUyOTgyOTE0NQ=="}, {"user": {"following_url": "https://api.github.com/users/chao-p/following{/other_user}", "url": "https://api.github.com/users/chao-p", "site_admin": false, "gists_url": "https://api.github.com/users/chao-p/gists{/gist_id}", "node_id": "MDQ6VXNlcjExMzczNjUy", "starred_url": "https://api.github.com/users/chao-p/starred{/owner}{/repo}", "gravatar_id": "", "id": 11373652, "events_url": "https://api.github.com/users/chao-p/events{/privacy}", "avatar_url": "https://avatars3.githubusercontent.com/u/11373652?v=4", "login": "chao-p", "repos_url": "https://api.github.com/users/chao-p/repos", "subscriptions_url": "https://api.github.com/users/chao-p/subscriptions", "followers_url": "https://api.github.com/users/chao-p/followers", "html_url": "https://github.com/chao-p", "received_events_url": "https://api.github.com/users/chao-p/received_events", "type": "User", "organizations_url": "https://api.github.com/users/chao-p/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/vm-device/issues/8", "body": "> needs\r\n\r\n\r\n\r\n> > Overall I believe all the source code under interrupt/kvm_irq should be part of VMM code instead of vm-device, in vm-device we don't need it at all. The only thing we do need is the trait definitions in interrupt/mod.rs\r\n> \r\n> It depends.\r\n> The irq manager implementation is generic enough, it just mimics hardware behaviors.\r\n> If we move the irq manager implementation into vmm, it means each vmm needs to repeat the same code.\r\n\r\nYes, definitely. For code sharing across VMMs you can move the code to another crate. I don't have strong opinion that we have to do like that way since it's already under the build-time control of 'kvm_irq'. But what I'm thinking is once other hypervisor(like Hyper-V) is added then it will add its implementation to vm-device as well.\r\n", "updated_at": "2019-09-10T08:36:56Z", "url": "https://api.github.com/repos/rust-vmm/vm-device/issues/comments/529833970", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/vm-device/pull/8#issuecomment-529833970", "created_at": "2019-09-10T08:36:56Z", "id": 529833970, "node_id": "MDEyOklzc3VlQ29tbWVudDUyOTgzMzk3MA=="}, {"user": {"following_url": "https://api.github.com/users/jiangliu/following{/other_user}", "url": "https://api.github.com/users/jiangliu", "site_admin": false, "gists_url": "https://api.github.com/users/jiangliu/gists{/gist_id}", "node_id": "MDQ6VXNlcjE5MzE1MTY=", "starred_url": "https://api.github.com/users/jiangliu/starred{/owner}{/repo}", "gravatar_id": "", "id": 1931516, "events_url": "https://api.github.com/users/jiangliu/events{/privacy}", "avatar_url": "https://avatars0.githubusercontent.com/u/1931516?v=4", "login": "jiangliu", "repos_url": "https://api.github.com/users/jiangliu/repos", "subscriptions_url": "https://api.github.com/users/jiangliu/subscriptions", "followers_url": "https://api.github.com/users/jiangliu/followers", "html_url": "https://github.com/jiangliu", "received_events_url": "https://api.github.com/users/jiangliu/received_events", "type": "User", "organizations_url": "https://api.github.com/users/jiangliu/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/vm-device/issues/8", "body": "> > needs\r\n> \r\n> > > Overall I believe all the source code under interrupt/kvm_irq should be part of VMM code instead of vm-device, in vm-device we don't need it at all. The only thing we do need is the trait definitions in interrupt/mod.rs\r\n> > \r\n> > \r\n> > It depends.\r\n> > The irq manager implementation is generic enough, it just mimics hardware behaviors.\r\n> > If we move the irq manager implementation into vmm, it means each vmm needs to repeat the same code.\r\n> \r\n> Yes, definitely. For code sharing across VMMs you can move the code to another crate. I don't have strong opinion that we have to do like that way since it's already under the build-time control of 'kvm_irq'. But what I'm thinking is once other hypervisor(like Hyper-V) is added then it will add its implementation to vm-device as well.\r\n\r\nThe idea is to let the vm-device provide both interfaces and some default implementations. \r\nOther hypervisor may provide its own implementation, which may or may not be merged into the vm-device crate.", "updated_at": "2019-09-10T08:44:20Z", "url": "https://api.github.com/repos/rust-vmm/vm-device/issues/comments/529836752", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/vm-device/pull/8#issuecomment-529836752", "created_at": "2019-09-10T08:44:20Z", "id": 529836752, "node_id": "MDEyOklzc3VlQ29tbWVudDUyOTgzNjc1Mg=="}, {"user": {"following_url": "https://api.github.com/users/chao-p/following{/other_user}", "url": "https://api.github.com/users/chao-p", "site_admin": false, "gists_url": "https://api.github.com/users/chao-p/gists{/gist_id}", "node_id": "MDQ6VXNlcjExMzczNjUy", "starred_url": "https://api.github.com/users/chao-p/starred{/owner}{/repo}", "gravatar_id": "", "id": 11373652, "events_url": "https://api.github.com/users/chao-p/events{/privacy}", "avatar_url": "https://avatars3.githubusercontent.com/u/11373652?v=4", "login": "chao-p", "repos_url": "https://api.github.com/users/chao-p/repos", "subscriptions_url": "https://api.github.com/users/chao-p/subscriptions", "followers_url": "https://api.github.com/users/chao-p/followers", "html_url": "https://github.com/chao-p", "received_events_url": "https://api.github.com/users/chao-p/received_events", "type": "User", "organizations_url": "https://api.github.com/users/chao-p/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/vm-device/issues/8", "body": "> > > needs\r\n> > \r\n> > \r\n> > > > Overall I believe all the source code under interrupt/kvm_irq should be part of VMM code instead of vm-device, in vm-device we don't need it at all. The only thing we do need is the trait definitions in interrupt/mod.rs\r\n> > > \r\n> > > \r\n> > > It depends.\r\n> > > The irq manager implementation is generic enough, it just mimics hardware behaviors.\r\n> > > If we move the irq manager implementation into vmm, it means each vmm needs to repeat the same code.\r\n> > \r\n> > \r\n> > Yes, definitely. For code sharing across VMMs you can move the code to another crate. I don't have strong opinion that we have to do like that way since it's already under the build-time control of 'kvm_irq'. But what I'm thinking is once other hypervisor(like Hyper-V) is added then it will add its implementation to vm-device as well.\r\n> \r\n> The idea is to let the vm-device provide both interfaces and some default implementations.\r\n> Other hypervisor may provide its own implementation, which may or may not be merged into the vm-device crate.\r\n\r\nsure.", "updated_at": "2019-09-10T08:58:47Z", "url": "https://api.github.com/repos/rust-vmm/vm-device/issues/comments/529842076", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/vm-device/pull/8#issuecomment-529842076", "created_at": "2019-09-10T08:58:47Z", "id": 529842076, "node_id": "MDEyOklzc3VlQ29tbWVudDUyOTg0MjA3Ng=="}, {"user": {"following_url": "https://api.github.com/users/jiangliu/following{/other_user}", "url": "https://api.github.com/users/jiangliu", "site_admin": false, "gists_url": "https://api.github.com/users/jiangliu/gists{/gist_id}", "node_id": "MDQ6VXNlcjE5MzE1MTY=", "starred_url": "https://api.github.com/users/jiangliu/starred{/owner}{/repo}", "gravatar_id": "", "id": 1931516, "events_url": "https://api.github.com/users/jiangliu/events{/privacy}", "avatar_url": "https://avatars0.githubusercontent.com/u/1931516?v=4", "login": "jiangliu", "repos_url": "https://api.github.com/users/jiangliu/repos", "subscriptions_url": "https://api.github.com/users/jiangliu/subscriptions", "followers_url": "https://api.github.com/users/jiangliu/followers", "html_url": "https://github.com/jiangliu", "received_events_url": "https://api.github.com/users/jiangliu/received_events", "type": "User", "organizations_url": "https://api.github.com/users/jiangliu/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/vm-device/issues/8", "body": "> @jiangliu I think it would be easier for reviewers to split this PR into 2 PRs:\r\n> \r\n> 1. The interrupt manager/subsystem itself\r\n> 2. The device resources and traits definitions\r\n> \r\n> I think both can be reviewed independently, which is a good sign about your overall PR design quality ;-)\r\n\r\nSeems most discussion are resource related, so have split the PR into two as you suggested.", "updated_at": "2019-09-10T09:32:00Z", "url": "https://api.github.com/repos/rust-vmm/vm-device/issues/comments/529854623", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/vm-device/pull/8#issuecomment-529854623", "created_at": "2019-09-10T09:32:00Z", "id": 529854623, "node_id": "MDEyOklzc3VlQ29tbWVudDUyOTg1NDYyMw=="}, {"user": {"following_url": "https://api.github.com/users/sameo/following{/other_user}", "url": "https://api.github.com/users/sameo", "site_admin": false, "gists_url": "https://api.github.com/users/sameo/gists{/gist_id}", "node_id": "MDQ6VXNlcjEwNDM4NjM=", "starred_url": "https://api.github.com/users/sameo/starred{/owner}{/repo}", "gravatar_id": "", "id": 1043863, "events_url": "https://api.github.com/users/sameo/events{/privacy}", "avatar_url": "https://avatars2.githubusercontent.com/u/1043863?v=4", "login": "sameo", "repos_url": "https://api.github.com/users/sameo/repos", "subscriptions_url": "https://api.github.com/users/sameo/subscriptions", "followers_url": "https://api.github.com/users/sameo/followers", "html_url": "https://github.com/sameo", "received_events_url": "https://api.github.com/users/sameo/received_events", "type": "User", "organizations_url": "https://api.github.com/users/sameo/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/vm-device/issues/8", "body": "This PR is replaced by #9 and #11 ", "updated_at": "2019-10-29T09:19:33Z", "url": "https://api.github.com/repos/rust-vmm/vm-device/issues/comments/547328018", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/vm-device/pull/8#issuecomment-547328018", "created_at": "2019-10-29T09:19:33Z", "id": 547328018, "node_id": "MDEyOklzc3VlQ29tbWVudDU0NzMyODAxOA=="}]