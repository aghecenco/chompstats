[{"user": {"following_url": "https://api.github.com/users/jiangliu/following{/other_user}", "url": "https://api.github.com/users/jiangliu", "site_admin": false, "gists_url": "https://api.github.com/users/jiangliu/gists{/gist_id}", "node_id": "MDQ6VXNlcjE5MzE1MTY=", "starred_url": "https://api.github.com/users/jiangliu/starred{/owner}{/repo}", "gravatar_id": "", "id": 1931516, "events_url": "https://api.github.com/users/jiangliu/events{/privacy}", "avatar_url": "https://avatars0.githubusercontent.com/u/1931516?v=4", "login": "jiangliu", "repos_url": "https://api.github.com/users/jiangliu/repos", "subscriptions_url": "https://api.github.com/users/jiangliu/subscriptions", "followers_url": "https://api.github.com/users/jiangliu/followers", "html_url": "https://github.com/jiangliu", "received_events_url": "https://api.github.com/users/jiangliu/received_events", "type": "User", "organizations_url": "https://api.github.com/users/jiangliu/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/kvm-ioctls/issues/64", "body": "Could we implement this in kvm-bindings crate? It should be simpler and natural to implement mechanism to access syscall related structs within the kvm-bindings crate.", "updated_at": "2019-10-16T13:40:08Z", "url": "https://api.github.com/repos/rust-vmm/kvm-ioctls/issues/comments/542705993", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/kvm-ioctls/pull/64#issuecomment-542705993", "created_at": "2019-10-16T13:40:08Z", "id": 542705993, "node_id": "MDEyOklzc3VlQ29tbWVudDU0MjcwNTk5Mw=="}, {"user": {"following_url": "https://api.github.com/users/andreeaflorescu/following{/other_user}", "url": "https://api.github.com/users/andreeaflorescu", "site_admin": false, "gists_url": "https://api.github.com/users/andreeaflorescu/gists{/gist_id}", "node_id": "MDQ6VXNlcjI4MTU5NDQ=", "starred_url": "https://api.github.com/users/andreeaflorescu/starred{/owner}{/repo}", "gravatar_id": "", "id": 2815944, "events_url": "https://api.github.com/users/andreeaflorescu/events{/privacy}", "avatar_url": "https://avatars0.githubusercontent.com/u/2815944?v=4", "login": "andreeaflorescu", "repos_url": "https://api.github.com/users/andreeaflorescu/repos", "subscriptions_url": "https://api.github.com/users/andreeaflorescu/subscriptions", "followers_url": "https://api.github.com/users/andreeaflorescu/followers", "html_url": "https://github.com/andreeaflorescu", "received_events_url": "https://api.github.com/users/andreeaflorescu/received_events", "type": "User", "organizations_url": "https://api.github.com/users/andreeaflorescu/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/kvm-ioctls/issues/64", "body": "@jiangliu I don't think that implementing these traits in the kvm-bindings crate is a good idea at the moment. There are a few reasons for that:\r\n\r\n1. kvm-bindings still separates clearly the autogenerated code from the one that is not autogenerated. I would prefer to keep it this way for now.\r\n2. we are in discussions about merging/collaborating with ketuvim (https://github.com/rust-vmm/community/issues/62). Probably it will become more clear after the rust-vmm meetup what is the plan there.\r\n\r\nWhile I believe that it's not the best thing now to move this functionality in kvm-bindings, we can discuss about it again once the rust-vmm components and their separation are more obvious.\r\n\r\nWhat do you say?\r\n\r\n ", "updated_at": "2019-10-16T14:54:40Z", "url": "https://api.github.com/repos/rust-vmm/kvm-ioctls/issues/comments/542741754", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/kvm-ioctls/pull/64#issuecomment-542741754", "created_at": "2019-10-16T14:54:40Z", "id": 542741754, "node_id": "MDEyOklzc3VlQ29tbWVudDU0Mjc0MTc1NA=="}, {"user": {"following_url": "https://api.github.com/users/jiangliu/following{/other_user}", "url": "https://api.github.com/users/jiangliu", "site_admin": false, "gists_url": "https://api.github.com/users/jiangliu/gists{/gist_id}", "node_id": "MDQ6VXNlcjE5MzE1MTY=", "starred_url": "https://api.github.com/users/jiangliu/starred{/owner}{/repo}", "gravatar_id": "", "id": 1931516, "events_url": "https://api.github.com/users/jiangliu/events{/privacy}", "avatar_url": "https://avatars0.githubusercontent.com/u/1931516?v=4", "login": "jiangliu", "repos_url": "https://api.github.com/users/jiangliu/repos", "subscriptions_url": "https://api.github.com/users/jiangliu/subscriptions", "followers_url": "https://api.github.com/users/jiangliu/followers", "html_url": "https://github.com/jiangliu", "received_events_url": "https://api.github.com/users/jiangliu/received_events", "type": "User", "organizations_url": "https://api.github.com/users/jiangliu/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/kvm-ioctls/issues/64", "body": "\r\n\r\n\r\n\r\n> @jiangliu I don't think that implementing these traits in the kvm-bindings crate is a good idea at the moment. There are a few reasons for that:\r\n> \r\n> 1. kvm-bindings still separates clearly the autogenerated code from the one that is not autogenerated. I would prefer to keep it this way for now.\r\nWhen enabling serde for kvm-bindings, I ran into the same issue to add non-auto-generated code to the kvm-bindings crate. In some sense, we are enhancing the bindgen tool to better support FAM structs, so \r\npropose to implement in the kvm-binding crate.\r\nIt's great to collaborate with the ketuvim project, which may help to solve all these issues.\r\n\r\n> 2. we are in discussions about merging/collaborating with ketuvim ([rust-vmm/community#62](https://github.com/rust-vmm/community/issues/62)). Probably it will become more clear after the rust-vmm meetup what is the plan there.\r\n> \r\n> While I believe that it's not the best thing now to move this functionality in kvm-bindings, we can discuss about it again once the rust-vmm components and their separation are more obvious.\r\n> \r\n> What do you say?\r\n\r\n", "updated_at": "2019-10-16T15:03:39Z", "url": "https://api.github.com/repos/rust-vmm/kvm-ioctls/issues/comments/542746149", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/kvm-ioctls/pull/64#issuecomment-542746149", "created_at": "2019-10-16T15:03:39Z", "id": 542746149, "node_id": "MDEyOklzc3VlQ29tbWVudDU0Mjc0NjE0OQ=="}, {"user": {"following_url": "https://api.github.com/users/acatangiu/following{/other_user}", "url": "https://api.github.com/users/acatangiu", "site_admin": false, "gists_url": "https://api.github.com/users/acatangiu/gists{/gist_id}", "node_id": "MDQ6VXNlcjMxOTE3OTcz", "starred_url": "https://api.github.com/users/acatangiu/starred{/owner}{/repo}", "gravatar_id": "", "id": 31917973, "events_url": "https://api.github.com/users/acatangiu/events{/privacy}", "avatar_url": "https://avatars3.githubusercontent.com/u/31917973?v=4", "login": "acatangiu", "repos_url": "https://api.github.com/users/acatangiu/repos", "subscriptions_url": "https://api.github.com/users/acatangiu/subscriptions", "followers_url": "https://api.github.com/users/acatangiu/followers", "html_url": "https://github.com/acatangiu", "received_events_url": "https://api.github.com/users/acatangiu/received_events", "type": "User", "organizations_url": "https://api.github.com/users/acatangiu/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/kvm-ioctls/issues/64", "body": "After some thought, I agree that the FamWrappers over the kvm FAM structures belong in the same crate as the structs themselves (kvm-bindings). Doing that also simplifies the implementation since we can directly implement the external FamStructWrapper trait on a local struct.\r\n\r\nI've opened https://github.com/rust-vmm/kvm-bindings/pull/8 that exemplifies how that'd look.\r\nThe PR adds a new module in that crate that doesn't touch the generated files, it just imports the structs from there, so that's nice. The downside is that `kvm-bindings` would depend on `vmm-sys-utils`.", "updated_at": "2019-10-22T11:37:42Z", "url": "https://api.github.com/repos/rust-vmm/kvm-ioctls/issues/comments/544920744", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/kvm-ioctls/pull/64#issuecomment-544920744", "created_at": "2019-10-22T11:37:42Z", "id": 544920744, "node_id": "MDEyOklzc3VlQ29tbWVudDU0NDkyMDc0NA=="}, {"user": {"following_url": "https://api.github.com/users/acatangiu/following{/other_user}", "url": "https://api.github.com/users/acatangiu", "site_admin": false, "gists_url": "https://api.github.com/users/acatangiu/gists{/gist_id}", "node_id": "MDQ6VXNlcjMxOTE3OTcz", "starred_url": "https://api.github.com/users/acatangiu/starred{/owner}{/repo}", "gravatar_id": "", "id": 31917973, "events_url": "https://api.github.com/users/acatangiu/events{/privacy}", "avatar_url": "https://avatars3.githubusercontent.com/u/31917973?v=4", "login": "acatangiu", "repos_url": "https://api.github.com/users/acatangiu/repos", "subscriptions_url": "https://api.github.com/users/acatangiu/subscriptions", "followers_url": "https://api.github.com/users/acatangiu/followers", "html_url": "https://github.com/acatangiu", "received_events_url": "https://api.github.com/users/acatangiu/received_events", "type": "User", "organizations_url": "https://api.github.com/users/acatangiu/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/kvm-ioctls/issues/64", "body": "The PR is updated to use the `kvm-bindings` safe wrappers. Please review when you get the chance.", "updated_at": "2019-11-08T13:14:32Z", "url": "https://api.github.com/repos/rust-vmm/kvm-ioctls/issues/comments/551773296", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/kvm-ioctls/pull/64#issuecomment-551773296", "created_at": "2019-11-08T13:14:32Z", "id": 551773296, "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTc3MzI5Ng=="}]