[{"user": {"following_url": "https://api.github.com/users/bonzini/following{/other_user}", "url": "https://api.github.com/users/bonzini", "site_admin": false, "gists_url": "https://api.github.com/users/bonzini/gists{/gist_id}", "node_id": "MDQ6VXNlcjQyMDgy", "starred_url": "https://api.github.com/users/bonzini/starred{/owner}{/repo}", "gravatar_id": "", "id": 42082, "events_url": "https://api.github.com/users/bonzini/events{/privacy}", "avatar_url": "https://avatars2.githubusercontent.com/u/42082?v=4", "login": "bonzini", "repos_url": "https://api.github.com/users/bonzini/repos", "subscriptions_url": "https://api.github.com/users/bonzini/subscriptions", "followers_url": "https://api.github.com/users/bonzini/followers", "html_url": "https://github.com/bonzini", "received_events_url": "https://api.github.com/users/bonzini/received_events", "type": "User", "organizations_url": "https://api.github.com/users/bonzini/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/community/issues/67", "body": "This design vaguely :) reminds me of QEMU. While I think that QEMU's overall migration format is fine, what about transmitting the device's migration data using Serde? See for example https://crates.io/crates/serde_asn1_der (not sure how mature that crate is).", "updated_at": "2019-07-10T10:21:13Z", "url": "https://api.github.com/repos/rust-vmm/community/issues/comments/510003895", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/community/issues/67#issuecomment-510003895", "created_at": "2019-07-10T10:21:13Z", "id": 510003895, "node_id": "MDEyOklzc3VlQ29tbWVudDUxMDAwMzg5NQ=="}, {"user": {"following_url": "https://api.github.com/users/jiangliu/following{/other_user}", "url": "https://api.github.com/users/jiangliu", "site_admin": false, "gists_url": "https://api.github.com/users/jiangliu/gists{/gist_id}", "node_id": "MDQ6VXNlcjE5MzE1MTY=", "starred_url": "https://api.github.com/users/jiangliu/starred{/owner}{/repo}", "gravatar_id": "", "id": 1931516, "events_url": "https://api.github.com/users/jiangliu/events{/privacy}", "avatar_url": "https://avatars0.githubusercontent.com/u/1931516?v=4", "login": "jiangliu", "repos_url": "https://api.github.com/users/jiangliu/repos", "subscriptions_url": "https://api.github.com/users/jiangliu/subscriptions", "followers_url": "https://api.github.com/users/jiangliu/followers", "html_url": "https://github.com/jiangliu", "received_events_url": "https://api.github.com/users/jiangliu/received_events", "type": "User", "organizations_url": "https://api.github.com/users/jiangliu/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/community/issues/67", "body": "> This design vaguely :) reminds me of QEMU. While I think that QEMU's overall migration format is fine, what about transmitting the device's migration data using Serde? See for example https://crates.io/crates/serde_asn1_der (not sure how mature that crate is).\r\nI prefer to use serde framework and avoid reinvent the wheel, but json is a little overhead:)\r\nAnother question is whether or not to reuse qemu live migration wire protocol.\r\n\r\n\r\n> This design vaguely :) reminds me of QEMU. While I think that QEMU's overall migration format is fine, what about transmitting the device's migration data using Serde? See for example https://crates.io/crates/serde_asn1_der (not sure how mature that crate is).\r\n\r\nI prefer to use the rust serde framework and avoid reinvent the wheel, but json is a little overhead:)\r\nAnother question is whether or not to reuse qemu live migration wire protocol.", "updated_at": "2019-07-10T10:46:43Z", "url": "https://api.github.com/repos/rust-vmm/community/issues/comments/510011131", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/community/issues/67#issuecomment-510011131", "created_at": "2019-07-10T10:46:43Z", "id": 510011131, "node_id": "MDEyOklzc3VlQ29tbWVudDUxMDAxMTEzMQ=="}, {"user": {"following_url": "https://api.github.com/users/jiangliu/following{/other_user}", "url": "https://api.github.com/users/jiangliu", "site_admin": false, "gists_url": "https://api.github.com/users/jiangliu/gists{/gist_id}", "node_id": "MDQ6VXNlcjE5MzE1MTY=", "starred_url": "https://api.github.com/users/jiangliu/starred{/owner}{/repo}", "gravatar_id": "", "id": 1931516, "events_url": "https://api.github.com/users/jiangliu/events{/privacy}", "avatar_url": "https://avatars0.githubusercontent.com/u/1931516?v=4", "login": "jiangliu", "repos_url": "https://api.github.com/users/jiangliu/repos", "subscriptions_url": "https://api.github.com/users/jiangliu/subscriptions", "followers_url": "https://api.github.com/users/jiangliu/followers", "html_url": "https://github.com/jiangliu", "received_events_url": "https://api.github.com/users/jiangliu/received_events", "type": "User", "organizations_url": "https://api.github.com/users/jiangliu/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/community/issues/67", "body": "How about using rust tokio/futures + serde for the live migration?", "updated_at": "2019-07-10T10:48:46Z", "url": "https://api.github.com/repos/rust-vmm/community/issues/comments/510011705", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/community/issues/67#issuecomment-510011705", "created_at": "2019-07-10T10:48:46Z", "id": 510011705, "node_id": "MDEyOklzc3VlQ29tbWVudDUxMDAxMTcwNQ=="}, {"user": {"following_url": "https://api.github.com/users/andreeaflorescu/following{/other_user}", "url": "https://api.github.com/users/andreeaflorescu", "site_admin": false, "gists_url": "https://api.github.com/users/andreeaflorescu/gists{/gist_id}", "node_id": "MDQ6VXNlcjI4MTU5NDQ=", "starred_url": "https://api.github.com/users/andreeaflorescu/starred{/owner}{/repo}", "gravatar_id": "", "id": 2815944, "events_url": "https://api.github.com/users/andreeaflorescu/events{/privacy}", "avatar_url": "https://avatars0.githubusercontent.com/u/2815944?v=4", "login": "andreeaflorescu", "repos_url": "https://api.github.com/users/andreeaflorescu/repos", "subscriptions_url": "https://api.github.com/users/andreeaflorescu/subscriptions", "followers_url": "https://api.github.com/users/andreeaflorescu/followers", "html_url": "https://github.com/andreeaflorescu", "received_events_url": "https://api.github.com/users/andreeaflorescu/received_events", "type": "User", "organizations_url": "https://api.github.com/users/andreeaflorescu/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/community/issues/67", "body": "@jiangliu tokio has been a big pain point for Firecracker because it pulls in so many dependencies that are simply unmanageable. We ended up with a fixed version of tokio and still struggling to get rid of that dependency. I don't think we should re-invent the wheel, but maybe we should put some more thought into this.", "updated_at": "2019-07-10T10:57:23Z", "url": "https://api.github.com/repos/rust-vmm/community/issues/comments/510014044", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/community/issues/67#issuecomment-510014044", "created_at": "2019-07-10T10:57:23Z", "id": 510014044, "node_id": "MDEyOklzc3VlQ29tbWVudDUxMDAxNDA0NA=="}, {"user": {"following_url": "https://api.github.com/users/andreeaflorescu/following{/other_user}", "url": "https://api.github.com/users/andreeaflorescu", "site_admin": false, "gists_url": "https://api.github.com/users/andreeaflorescu/gists{/gist_id}", "node_id": "MDQ6VXNlcjI4MTU5NDQ=", "starred_url": "https://api.github.com/users/andreeaflorescu/starred{/owner}{/repo}", "gravatar_id": "", "id": 2815944, "events_url": "https://api.github.com/users/andreeaflorescu/events{/privacy}", "avatar_url": "https://avatars0.githubusercontent.com/u/2815944?v=4", "login": "andreeaflorescu", "repos_url": "https://api.github.com/users/andreeaflorescu/repos", "subscriptions_url": "https://api.github.com/users/andreeaflorescu/subscriptions", "followers_url": "https://api.github.com/users/andreeaflorescu/followers", "html_url": "https://github.com/andreeaflorescu", "received_events_url": "https://api.github.com/users/andreeaflorescu/received_events", "type": "User", "organizations_url": "https://api.github.com/users/andreeaflorescu/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/community/issues/67", "body": "BTW, serde has support for multiple data formats, we don't necessarily need to use JSON if we end up using serde.\r\n\r\nhttps://serde.rs/#data-formats", "updated_at": "2019-07-10T11:03:59Z", "url": "https://api.github.com/repos/rust-vmm/community/issues/comments/510015814", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/community/issues/67#issuecomment-510015814", "created_at": "2019-07-10T11:03:51Z", "id": 510015814, "node_id": "MDEyOklzc3VlQ29tbWVudDUxMDAxNTgxNA=="}, {"user": {"following_url": "https://api.github.com/users/jiangliu/following{/other_user}", "url": "https://api.github.com/users/jiangliu", "site_admin": false, "gists_url": "https://api.github.com/users/jiangliu/gists{/gist_id}", "node_id": "MDQ6VXNlcjE5MzE1MTY=", "starred_url": "https://api.github.com/users/jiangliu/starred{/owner}{/repo}", "gravatar_id": "", "id": 1931516, "events_url": "https://api.github.com/users/jiangliu/events{/privacy}", "avatar_url": "https://avatars0.githubusercontent.com/u/1931516?v=4", "login": "jiangliu", "repos_url": "https://api.github.com/users/jiangliu/repos", "subscriptions_url": "https://api.github.com/users/jiangliu/subscriptions", "followers_url": "https://api.github.com/users/jiangliu/followers", "html_url": "https://github.com/jiangliu", "received_events_url": "https://api.github.com/users/jiangliu/received_events", "type": "User", "organizations_url": "https://api.github.com/users/jiangliu/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/community/issues/67", "body": "> @jiangliu tokio has been a big pain point for Firecracker because it pulls in so many dependencies that are simply unmanageable. We ended up with a fixed version of tokio and still struggling to get rid of that dependency. I don't think we should re-invent the wheel, but maybe we should put some more thought into this.\r\n\r\nGood point:)\r\nSeems that the future crate is lightweight, by the hyper crate is really heavyweight, tokio is moderate depending on the features used.", "updated_at": "2019-07-10T12:16:58Z", "url": "https://api.github.com/repos/rust-vmm/community/issues/comments/510036424", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/community/issues/67#issuecomment-510036424", "created_at": "2019-07-10T12:16:58Z", "id": 510036424, "node_id": "MDEyOklzc3VlQ29tbWVudDUxMDAzNjQyNA=="}, {"user": {"following_url": "https://api.github.com/users/yisun-git/following{/other_user}", "url": "https://api.github.com/users/yisun-git", "site_admin": false, "gists_url": "https://api.github.com/users/yisun-git/gists{/gist_id}", "node_id": "MDQ6VXNlcjIyODgwMTQx", "starred_url": "https://api.github.com/users/yisun-git/starred{/owner}{/repo}", "gravatar_id": "", "id": 22880141, "events_url": "https://api.github.com/users/yisun-git/events{/privacy}", "avatar_url": "https://avatars0.githubusercontent.com/u/22880141?v=4", "login": "yisun-git", "repos_url": "https://api.github.com/users/yisun-git/repos", "subscriptions_url": "https://api.github.com/users/yisun-git/subscriptions", "followers_url": "https://api.github.com/users/yisun-git/followers", "html_url": "https://github.com/yisun-git", "received_events_url": "https://api.github.com/users/yisun-git/received_events", "type": "User", "organizations_url": "https://api.github.com/users/yisun-git/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/community/issues/67", "body": "> > This design vaguely :) reminds me of QEMU. While I think that QEMU's overall migration format is fine, what about transmitting the device's migration data using Serde? See for example https://crates.io/crates/serde_asn1_der (not sure how mature that crate is).\r\n> \r\n> I prefer to use the rust serde framework and avoid reinvent the wheel, but json is a little overhead:)\r\n> Another question is whether or not to reuse qemu live migration wire protocol.\r\n\r\nHi, all, thanks for the comment! I am thinking to use serde to serialize/deserialize migration data. Per my thought, it should be a tool used by MigrationData to assemble the migration data according to the format defined by MigrationDataFileFlag. Then, we can keep the ability to do migration between Qemu and rust-vmm. How do you think? ", "updated_at": "2019-07-11T02:19:21Z", "url": "https://api.github.com/repos/rust-vmm/community/issues/comments/510301363", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/community/issues/67#issuecomment-510301363", "created_at": "2019-07-11T02:19:21Z", "id": 510301363, "node_id": "MDEyOklzc3VlQ29tbWVudDUxMDMwMTM2Mw=="}, {"user": {"following_url": "https://api.github.com/users/jiangliu/following{/other_user}", "url": "https://api.github.com/users/jiangliu", "site_admin": false, "gists_url": "https://api.github.com/users/jiangliu/gists{/gist_id}", "node_id": "MDQ6VXNlcjE5MzE1MTY=", "starred_url": "https://api.github.com/users/jiangliu/starred{/owner}{/repo}", "gravatar_id": "", "id": 1931516, "events_url": "https://api.github.com/users/jiangliu/events{/privacy}", "avatar_url": "https://avatars0.githubusercontent.com/u/1931516?v=4", "login": "jiangliu", "repos_url": "https://api.github.com/users/jiangliu/repos", "subscriptions_url": "https://api.github.com/users/jiangliu/subscriptions", "followers_url": "https://api.github.com/users/jiangliu/followers", "html_url": "https://github.com/jiangliu", "received_events_url": "https://api.github.com/users/jiangliu/received_events", "type": "User", "organizations_url": "https://api.github.com/users/jiangliu/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/community/issues/67", "body": "> > > This design vaguely :) reminds me of QEMU. While I think that QEMU's overall migration format is fine, what about transmitting the device's migration data using Serde? See for example https://crates.io/crates/serde_asn1_der (not sure how mature that crate is).\r\n> > \r\n> > \r\n> > I prefer to use the rust serde framework and avoid reinvent the wheel, but json is a little overhead:)\r\n> > Another question is whether or not to reuse qemu live migration wire protocol.\r\n> \r\n> Hi, all, thanks for the comment! I am thinking to use serde to serialize/deserialize migration data. Per my thought, it should be a tool used by MigrationData to assemble the migration data according to the format defined by MigrationDataFileFlag. Then, we can keep the ability to do migration between Qemu and rust-vmm. How do you think?\r\n\r\nHave some concerns about the goal to migration vms between firecracker/cloudhypervisor and qemu. It may needs big effort or even impossible.", "updated_at": "2019-07-11T02:26:18Z", "url": "https://api.github.com/repos/rust-vmm/community/issues/comments/510302943", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/community/issues/67#issuecomment-510302943", "created_at": "2019-07-11T02:26:18Z", "id": 510302943, "node_id": "MDEyOklzc3VlQ29tbWVudDUxMDMwMjk0Mw=="}, {"user": {"following_url": "https://api.github.com/users/yisun-git/following{/other_user}", "url": "https://api.github.com/users/yisun-git", "site_admin": false, "gists_url": "https://api.github.com/users/yisun-git/gists{/gist_id}", "node_id": "MDQ6VXNlcjIyODgwMTQx", "starred_url": "https://api.github.com/users/yisun-git/starred{/owner}{/repo}", "gravatar_id": "", "id": 22880141, "events_url": "https://api.github.com/users/yisun-git/events{/privacy}", "avatar_url": "https://avatars0.githubusercontent.com/u/22880141?v=4", "login": "yisun-git", "repos_url": "https://api.github.com/users/yisun-git/repos", "subscriptions_url": "https://api.github.com/users/yisun-git/subscriptions", "followers_url": "https://api.github.com/users/yisun-git/followers", "html_url": "https://github.com/yisun-git", "received_events_url": "https://api.github.com/users/yisun-git/received_events", "type": "User", "organizations_url": "https://api.github.com/users/yisun-git/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/community/issues/67", "body": "> > > > This design vaguely :) reminds me of QEMU. While I think that QEMU's overall migration format is fine, what about transmitting the device's migration data using Serde? See for example https://crates.io/crates/serde_asn1_der (not sure how mature that crate is).\r\n> > > \r\n> > > \r\n> > > I prefer to use the rust serde framework and avoid reinvent the wheel, but json is a little overhead:)\r\n> > > Another question is whether or not to reuse qemu live migration wire protocol.\r\n> > \r\n> > \r\n> > Hi, all, thanks for the comment! I am thinking to use serde to serialize/deserialize migration data. Per my thought, it should be a tool used by MigrationData to assemble the migration data according to the format defined by MigrationDataFileFlag. Then, we can keep the ability to do migration between Qemu and rust-vmm. How do you think?\r\n> \r\n> Have some concerns about the goal to migration vms between firecracker/cloudhypervisor and qemu. It may needs big effort or even impossible.\r\n\r\nYes, maybe. In fact, I am not very sure about it either. @bonzini @andreeaflorescu, how about your opinions? Thanks!", "updated_at": "2019-07-11T02:54:23Z", "url": "https://api.github.com/repos/rust-vmm/community/issues/comments/510308388", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/community/issues/67#issuecomment-510308388", "created_at": "2019-07-11T02:54:23Z", "id": 510308388, "node_id": "MDEyOklzc3VlQ29tbWVudDUxMDMwODM4OA=="}, {"user": {"following_url": "https://api.github.com/users/yisun-git/following{/other_user}", "url": "https://api.github.com/users/yisun-git", "site_admin": false, "gists_url": "https://api.github.com/users/yisun-git/gists{/gist_id}", "node_id": "MDQ6VXNlcjIyODgwMTQx", "starred_url": "https://api.github.com/users/yisun-git/starred{/owner}{/repo}", "gravatar_id": "", "id": 22880141, "events_url": "https://api.github.com/users/yisun-git/events{/privacy}", "avatar_url": "https://avatars0.githubusercontent.com/u/22880141?v=4", "login": "yisun-git", "repos_url": "https://api.github.com/users/yisun-git/repos", "subscriptions_url": "https://api.github.com/users/yisun-git/subscriptions", "followers_url": "https://api.github.com/users/yisun-git/followers", "html_url": "https://github.com/yisun-git", "received_events_url": "https://api.github.com/users/yisun-git/received_events", "type": "User", "organizations_url": "https://api.github.com/users/yisun-git/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/community/issues/67", "body": "> > @jiangliu tokio has been a big pain point for Firecracker because it pulls in so many dependencies that are simply unmanageable. We ended up with a fixed version of tokio and still struggling to get rid of that dependency. I don't think we should re-invent the wheel, but maybe we should put some more thought into this.\r\n> \r\n> Good point:)\r\n> Seems that the future crate is lightweight, by the hyper crate is really heavyweight, tokio is moderate depending on the features used.\r\n\r\nHow about fibers crate which bases on futures and mio to support asynchronous tasks? It looks more lightweight than tokio.", "updated_at": "2019-07-11T03:38:52Z", "url": "https://api.github.com/repos/rust-vmm/community/issues/comments/510316249", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/community/issues/67#issuecomment-510316249", "created_at": "2019-07-11T03:38:52Z", "id": 510316249, "node_id": "MDEyOklzc3VlQ29tbWVudDUxMDMxNjI0OQ=="}, {"user": {"following_url": "https://api.github.com/users/richardwyang/following{/other_user}", "url": "https://api.github.com/users/richardwyang", "site_admin": false, "gists_url": "https://api.github.com/users/richardwyang/gists{/gist_id}", "node_id": "MDQ6VXNlcjQ4NTQ3NTA1", "starred_url": "https://api.github.com/users/richardwyang/starred{/owner}{/repo}", "gravatar_id": "", "id": 48547505, "events_url": "https://api.github.com/users/richardwyang/events{/privacy}", "avatar_url": "https://avatars0.githubusercontent.com/u/48547505?v=4", "login": "richardwyang", "repos_url": "https://api.github.com/users/richardwyang/repos", "subscriptions_url": "https://api.github.com/users/richardwyang/subscriptions", "followers_url": "https://api.github.com/users/richardwyang/followers", "html_url": "https://github.com/richardwyang", "received_events_url": "https://api.github.com/users/richardwyang/received_events", "type": "User", "organizations_url": "https://api.github.com/users/richardwyang/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/community/issues/67", "body": "Hmm... I got one confusion. Why we plan to separate MigrationState and MigrationRam.\r\n\r\nIn case we leverage QEMU, we see RAM and other devices are registered on savevm_state as the same type SaveStateEntry. They are treated as the same during each iteration and completion stage, but with different handlers. This is how they are handled differently.\r\n\r\nI agree that RAM is special and need some tricks to handle. While from higher level point of view, it could be the same as others. For implementation detail, it is reasonable to have unique behaviors.\r\n\r\nIn case I missed something, just let me know. ", "updated_at": "2019-07-11T05:55:22Z", "url": "https://api.github.com/repos/rust-vmm/community/issues/comments/510340437", "author_association": "NONE", "html_url": "https://github.com/rust-vmm/community/issues/67#issuecomment-510340437", "created_at": "2019-07-11T05:55:22Z", "id": 510340437, "node_id": "MDEyOklzc3VlQ29tbWVudDUxMDM0MDQzNw=="}, {"user": {"following_url": "https://api.github.com/users/bonzini/following{/other_user}", "url": "https://api.github.com/users/bonzini", "site_admin": false, "gists_url": "https://api.github.com/users/bonzini/gists{/gist_id}", "node_id": "MDQ6VXNlcjQyMDgy", "starred_url": "https://api.github.com/users/bonzini/starred{/owner}{/repo}", "gravatar_id": "", "id": 42082, "events_url": "https://api.github.com/users/bonzini/events{/privacy}", "avatar_url": "https://avatars2.githubusercontent.com/u/42082?v=4", "login": "bonzini", "repos_url": "https://api.github.com/users/bonzini/repos", "subscriptions_url": "https://api.github.com/users/bonzini/subscriptions", "followers_url": "https://api.github.com/users/bonzini/followers", "html_url": "https://github.com/bonzini", "received_events_url": "https://api.github.com/users/bonzini/received_events", "type": "User", "organizations_url": "https://api.github.com/users/bonzini/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/community/issues/67", "body": "Live migration between QEMU and rust-vmm is not really a practical goal. For any but the simplest devices, migration includes implementation details such as timers and device names that are going to differ too much.", "updated_at": "2019-07-11T06:50:45Z", "url": "https://api.github.com/repos/rust-vmm/community/issues/comments/510353844", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/community/issues/67#issuecomment-510353844", "created_at": "2019-07-11T06:49:28Z", "id": 510353844, "node_id": "MDEyOklzc3VlQ29tbWVudDUxMDM1Mzg0NA=="}, {"user": {"following_url": "https://api.github.com/users/yisun-git/following{/other_user}", "url": "https://api.github.com/users/yisun-git", "site_admin": false, "gists_url": "https://api.github.com/users/yisun-git/gists{/gist_id}", "node_id": "MDQ6VXNlcjIyODgwMTQx", "starred_url": "https://api.github.com/users/yisun-git/starred{/owner}{/repo}", "gravatar_id": "", "id": 22880141, "events_url": "https://api.github.com/users/yisun-git/events{/privacy}", "avatar_url": "https://avatars0.githubusercontent.com/u/22880141?v=4", "login": "yisun-git", "repos_url": "https://api.github.com/users/yisun-git/repos", "subscriptions_url": "https://api.github.com/users/yisun-git/subscriptions", "followers_url": "https://api.github.com/users/yisun-git/followers", "html_url": "https://github.com/yisun-git", "received_events_url": "https://api.github.com/users/yisun-git/received_events", "type": "User", "organizations_url": "https://api.github.com/users/yisun-git/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/community/issues/67", "body": "> Hmm... I got one confusion. Why we plan to separate MigrationState and MigrationRam.\r\n> \r\n> In case we leverage QEMU, we see RAM and other devices are registered on savevm_state as the same type SaveStateEntry. They are treated as the same during each iteration and completion stage, but with different handlers. This is how they are handled differently.\r\n> \r\n> I agree that RAM is special and need some tricks to handle. While from higher level point of view, it could be the same as others. For implementation detail, it is reasonable to have unique behaviors.\r\n> \r\n> In case I missed something, just let me know.\r\n\r\nHi, Richard, because ram is really different with states, I do not want to mix them together to provide unified handlers. That may cause complexity which seems not necessary. ", "updated_at": "2019-07-11T07:33:20Z", "url": "https://api.github.com/repos/rust-vmm/community/issues/comments/510362048", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/community/issues/67#issuecomment-510362048", "created_at": "2019-07-11T07:17:42Z", "id": 510362048, "node_id": "MDEyOklzc3VlQ29tbWVudDUxMDM2MjA0OA=="}, {"user": {"following_url": "https://api.github.com/users/yisun-git/following{/other_user}", "url": "https://api.github.com/users/yisun-git", "site_admin": false, "gists_url": "https://api.github.com/users/yisun-git/gists{/gist_id}", "node_id": "MDQ6VXNlcjIyODgwMTQx", "starred_url": "https://api.github.com/users/yisun-git/starred{/owner}{/repo}", "gravatar_id": "", "id": 22880141, "events_url": "https://api.github.com/users/yisun-git/events{/privacy}", "avatar_url": "https://avatars0.githubusercontent.com/u/22880141?v=4", "login": "yisun-git", "repos_url": "https://api.github.com/users/yisun-git/repos", "subscriptions_url": "https://api.github.com/users/yisun-git/subscriptions", "followers_url": "https://api.github.com/users/yisun-git/followers", "html_url": "https://github.com/yisun-git", "received_events_url": "https://api.github.com/users/yisun-git/received_events", "type": "User", "organizations_url": "https://api.github.com/users/yisun-git/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/community/issues/67", "body": "> Live migration between QEMU and rust-vmm is not really a practical goal. For any but the simplest devices, migration includes implementation details such as timers that are going to differ too much.\r\n\r\nThank you! This is very important comment. So I may not consider migration between Qemu and rust-vmm. That may simplify things.", "updated_at": "2019-07-11T07:19:18Z", "url": "https://api.github.com/repos/rust-vmm/community/issues/comments/510362521", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/community/issues/67#issuecomment-510362521", "created_at": "2019-07-11T07:19:18Z", "id": 510362521, "node_id": "MDEyOklzc3VlQ29tbWVudDUxMDM2MjUyMQ=="}, {"user": {"following_url": "https://api.github.com/users/vmsearch/following{/other_user}", "url": "https://api.github.com/users/vmsearch", "site_admin": false, "gists_url": "https://api.github.com/users/vmsearch/gists{/gist_id}", "node_id": "MDQ6VXNlcjE1ODQ3NTU5", "starred_url": "https://api.github.com/users/vmsearch/starred{/owner}{/repo}", "gravatar_id": "", "id": 15847559, "events_url": "https://api.github.com/users/vmsearch/events{/privacy}", "avatar_url": "https://avatars1.githubusercontent.com/u/15847559?v=4", "login": "vmsearch", "repos_url": "https://api.github.com/users/vmsearch/repos", "subscriptions_url": "https://api.github.com/users/vmsearch/subscriptions", "followers_url": "https://api.github.com/users/vmsearch/followers", "html_url": "https://github.com/vmsearch", "received_events_url": "https://api.github.com/users/vmsearch/received_events", "type": "User", "organizations_url": "https://api.github.com/users/vmsearch/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/community/issues/67", "body": "@yisun-git  the migration is in progressing? ", "updated_at": "2019-07-25T04:17:36Z", "url": "https://api.github.com/repos/rust-vmm/community/issues/comments/514888949", "author_association": "NONE", "html_url": "https://github.com/rust-vmm/community/issues/67#issuecomment-514888949", "created_at": "2019-07-25T04:17:36Z", "id": 514888949, "node_id": "MDEyOklzc3VlQ29tbWVudDUxNDg4ODk0OQ=="}, {"user": {"following_url": "https://api.github.com/users/yisun-git/following{/other_user}", "url": "https://api.github.com/users/yisun-git", "site_admin": false, "gists_url": "https://api.github.com/users/yisun-git/gists{/gist_id}", "node_id": "MDQ6VXNlcjIyODgwMTQx", "starred_url": "https://api.github.com/users/yisun-git/starred{/owner}{/repo}", "gravatar_id": "", "id": 22880141, "events_url": "https://api.github.com/users/yisun-git/events{/privacy}", "avatar_url": "https://avatars0.githubusercontent.com/u/22880141?v=4", "login": "yisun-git", "repos_url": "https://api.github.com/users/yisun-git/repos", "subscriptions_url": "https://api.github.com/users/yisun-git/subscriptions", "followers_url": "https://api.github.com/users/yisun-git/followers", "html_url": "https://github.com/yisun-git", "received_events_url": "https://api.github.com/users/yisun-git/received_events", "type": "User", "organizations_url": "https://api.github.com/users/yisun-git/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/community/issues/67", "body": "> @yisun-git the migration is in progressing?\r\n\r\nYes, working on draft codes.", "updated_at": "2019-07-25T08:49:44Z", "url": "https://api.github.com/repos/rust-vmm/community/issues/comments/514957379", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/community/issues/67#issuecomment-514957379", "created_at": "2019-07-25T08:49:44Z", "id": 514957379, "node_id": "MDEyOklzc3VlQ29tbWVudDUxNDk1NzM3OQ=="}, {"user": {"following_url": "https://api.github.com/users/vmsearch/following{/other_user}", "url": "https://api.github.com/users/vmsearch", "site_admin": false, "gists_url": "https://api.github.com/users/vmsearch/gists{/gist_id}", "node_id": "MDQ6VXNlcjE1ODQ3NTU5", "starred_url": "https://api.github.com/users/vmsearch/starred{/owner}{/repo}", "gravatar_id": "", "id": 15847559, "events_url": "https://api.github.com/users/vmsearch/events{/privacy}", "avatar_url": "https://avatars1.githubusercontent.com/u/15847559?v=4", "login": "vmsearch", "repos_url": "https://api.github.com/users/vmsearch/repos", "subscriptions_url": "https://api.github.com/users/vmsearch/subscriptions", "followers_url": "https://api.github.com/users/vmsearch/followers", "html_url": "https://github.com/vmsearch", "received_events_url": "https://api.github.com/users/vmsearch/received_events", "type": "User", "organizations_url": "https://api.github.com/users/vmsearch/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/community/issues/67", "body": "> > @yisun-git the migration is in progressing?\r\n> \r\n> Yes, working on draft codes.\r\n\r\nThanks your reply, Looking forward to your good news!", "updated_at": "2019-07-25T11:59:23Z", "url": "https://api.github.com/repos/rust-vmm/community/issues/comments/515015612", "author_association": "NONE", "html_url": "https://github.com/rust-vmm/community/issues/67#issuecomment-515015612", "created_at": "2019-07-25T11:59:23Z", "id": 515015612, "node_id": "MDEyOklzc3VlQ29tbWVudDUxNTAxNTYxMg=="}, {"user": {"following_url": "https://api.github.com/users/sboeuf/following{/other_user}", "url": "https://api.github.com/users/sboeuf", "site_admin": false, "gists_url": "https://api.github.com/users/sboeuf/gists{/gist_id}", "node_id": "MDQ6VXNlcjIyODkwNDEz", "starred_url": "https://api.github.com/users/sboeuf/starred{/owner}{/repo}", "gravatar_id": "", "id": 22890413, "events_url": "https://api.github.com/users/sboeuf/events{/privacy}", "avatar_url": "https://avatars3.githubusercontent.com/u/22890413?v=4", "login": "sboeuf", "repos_url": "https://api.github.com/users/sboeuf/repos", "subscriptions_url": "https://api.github.com/users/sboeuf/subscriptions", "followers_url": "https://api.github.com/users/sboeuf/followers", "html_url": "https://github.com/sboeuf", "received_events_url": "https://api.github.com/users/sboeuf/received_events", "type": "User", "organizations_url": "https://api.github.com/users/sboeuf/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/community/issues/67", "body": "@yisun-git this is a very complete proposal :)\r\n\r\nRegarding the name of the crate, shouldn't this be `vm-migration` instead of `vm-live-migration`? Including `live` in the name sounds a bit reductive since I think we can achieve both _regular_ and _live_ migration with this crate.\r\n\r\nA bit similar to my first comment, I'm wondering if we shouldn't start with _regular_ migration instead of _live_ migration. I know live migration is the end goal for production environment, but regular migration would allow us to focus on VM data and states which need to be saved.\r\nI might be missing something (since I have no experience in VM migration) but it feels like being able to take a proper snapshot of a VM and save it to some files, so that we could start another VM with those files as inputs would be the first step.\r\n\r\nAdding the whole communication mechanism to perform the _live_ migration seems like an orthogonal task and might be something that gets added later.\r\n\r\nComments more than welcome since I might be completely off track :)", "updated_at": "2019-08-16T01:34:05Z", "url": "https://api.github.com/repos/rust-vmm/community/issues/comments/521852738", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/community/issues/67#issuecomment-521852738", "created_at": "2019-08-16T01:34:05Z", "id": 521852738, "node_id": "MDEyOklzc3VlQ29tbWVudDUyMTg1MjczOA=="}, {"user": {"following_url": "https://api.github.com/users/andreeaflorescu/following{/other_user}", "url": "https://api.github.com/users/andreeaflorescu", "site_admin": false, "gists_url": "https://api.github.com/users/andreeaflorescu/gists{/gist_id}", "node_id": "MDQ6VXNlcjI4MTU5NDQ=", "starred_url": "https://api.github.com/users/andreeaflorescu/starred{/owner}{/repo}", "gravatar_id": "", "id": 2815944, "events_url": "https://api.github.com/users/andreeaflorescu/events{/privacy}", "avatar_url": "https://avatars0.githubusercontent.com/u/2815944?v=4", "login": "andreeaflorescu", "repos_url": "https://api.github.com/users/andreeaflorescu/repos", "subscriptions_url": "https://api.github.com/users/andreeaflorescu/subscriptions", "followers_url": "https://api.github.com/users/andreeaflorescu/followers", "html_url": "https://github.com/andreeaflorescu", "received_events_url": "https://api.github.com/users/andreeaflorescu/received_events", "type": "User", "organizations_url": "https://api.github.com/users/andreeaflorescu/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/community/issues/67", "body": "My honest opinion is that it's too early to plan for live-migration when we don't even have the minimal crates in rust-vmm to create a dummy VMM. I also believe that live-migration depends (or better said) should depend on the implementation of devices and other components in rust-vmm. At this moment we don't have a high level design of how future and current rust-vmm components will interact. We also don't have the basic components in rust-vmm like common virtio implementations.\r\n\r\nIs the plan to have something merge-able in the near future? Or is the point of this issue to just discuss about how live-migration might be implemented by multiple VMMs using rust-vmm components? I think the second option could make sense since I am assuming that multiple parties are currently working on implementing live migration for their own version of Rust VMM, so people can share ideas. But if what we want to achieve is a vm-migration crate in rust-vmm in the following months **before** we have an idea of how rust-vmm will look in the future, I think that is not the best we can do right now for the future of this project.", "updated_at": "2019-08-16T09:23:06Z", "url": "https://api.github.com/repos/rust-vmm/community/issues/comments/521947049", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/community/issues/67#issuecomment-521947049", "created_at": "2019-08-16T09:23:06Z", "id": 521947049, "node_id": "MDEyOklzc3VlQ29tbWVudDUyMTk0NzA0OQ=="}, {"user": {"following_url": "https://api.github.com/users/yisun-git/following{/other_user}", "url": "https://api.github.com/users/yisun-git", "site_admin": false, "gists_url": "https://api.github.com/users/yisun-git/gists{/gist_id}", "node_id": "MDQ6VXNlcjIyODgwMTQx", "starred_url": "https://api.github.com/users/yisun-git/starred{/owner}{/repo}", "gravatar_id": "", "id": 22880141, "events_url": "https://api.github.com/users/yisun-git/events{/privacy}", "avatar_url": "https://avatars0.githubusercontent.com/u/22880141?v=4", "login": "yisun-git", "repos_url": "https://api.github.com/users/yisun-git/repos", "subscriptions_url": "https://api.github.com/users/yisun-git/subscriptions", "followers_url": "https://api.github.com/users/yisun-git/followers", "html_url": "https://github.com/yisun-git", "received_events_url": "https://api.github.com/users/yisun-git/received_events", "type": "User", "organizations_url": "https://api.github.com/users/yisun-git/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/community/issues/67", "body": "Thanks for the comment!\r\n\r\n> @yisun-git this is a very complete proposal :)\r\n> \r\n> Regarding the name of the crate, shouldn't this be `vm-migration` instead of `vm-live-migration`? Including `live` in the name sounds a bit reductive since I think we can achieve both _regular_ and _live_ migration with this crate.\r\n> \r\n> A bit similar to my first comment, I'm wondering if we shouldn't start with _regular_ migration instead of _live_ migration. I know live migration is the end goal for production environment, but regular migration would allow us to focus on VM data and states which need to be saved.\r\n> I might be missing something (since I have no experience in VM migration) but it feels like being able to take a proper snapshot of a VM and save it to some files, so that we could start another VM with those files as inputs would be the first step.\r\n> \r\nYes, snapshot can be treated as special case of live migration. At least, most codes could be same.\r\n\r\n> Adding the whole communication mechanism to perform the _live_ migration seems like an orthogonal task and might be something that gets added later.\r\n> \r\nYes, communication layer is independent. Although I have implemented the basic communication codes, I will consider your suggestions. Thanks!\r\n\r\n> Comments more than welcome since I might be completely off track :)\r\n\r\n", "updated_at": "2019-08-19T03:30:07Z", "url": "https://api.github.com/repos/rust-vmm/community/issues/comments/522398261", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/community/issues/67#issuecomment-522398261", "created_at": "2019-08-19T03:30:07Z", "id": 522398261, "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjM5ODI2MQ=="}, {"user": {"following_url": "https://api.github.com/users/yisun-git/following{/other_user}", "url": "https://api.github.com/users/yisun-git", "site_admin": false, "gists_url": "https://api.github.com/users/yisun-git/gists{/gist_id}", "node_id": "MDQ6VXNlcjIyODgwMTQx", "starred_url": "https://api.github.com/users/yisun-git/starred{/owner}{/repo}", "gravatar_id": "", "id": 22880141, "events_url": "https://api.github.com/users/yisun-git/events{/privacy}", "avatar_url": "https://avatars0.githubusercontent.com/u/22880141?v=4", "login": "yisun-git", "repos_url": "https://api.github.com/users/yisun-git/repos", "subscriptions_url": "https://api.github.com/users/yisun-git/subscriptions", "followers_url": "https://api.github.com/users/yisun-git/followers", "html_url": "https://github.com/yisun-git", "received_events_url": "https://api.github.com/users/yisun-git/received_events", "type": "User", "organizations_url": "https://api.github.com/users/yisun-git/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/community/issues/67", "body": "> My honest opinion is that it's too early to plan for live-migration when we don't even have the minimal crates in rust-vmm to create a dummy VMM. I also believe that live-migration depends (or better said) should depend on the implementation of devices and other components in rust-vmm. At this moment we don't have a high level design of how future and current rust-vmm components will interact. We also don't have the basic components in rust-vmm like common virtio implementations.\r\n> \r\nLive migration does depend on many components, e.g. the vcpu/devices/memory/etc. But rust-vmm does not have most of them now. Furthermore, rust-vmm does not have basic components now and miss a high level design. Shall we consider it and make a road-map ASAP?  I think live migration should be a good start to trigger the consideration and discussion.\r\n\r\n> Is the plan to have something merge-able in the near future? Or is the point of this issue to just discuss about how live-migration might be implemented by multiple VMMs using rust-vmm components? I think the second option could make sense since I am assuming that multiple parties are currently working on implementing live migration for their own version of Rust VMM, so people can share ideas. But if what we want to achieve is a vm-migration crate in rust-vmm in the following months **before** we have an idea of how rust-vmm will look in the future, I think that is not the best we can do right now for the future of this project.\r\n\r\nBecause rust-vmm lacks many components, I do not plan to make the whole vm-migration crate merged in short time. But I want to share my ideas and even the draft codes (implemented on workable rust vmm) here to get helpful comments and suggestions. Furthermore, I think some basic mechanisms of migration may be merged if the codes are mature enough so that the users of rust-vmm can get benefit from it.\r\n", "updated_at": "2019-08-19T03:39:39Z", "url": "https://api.github.com/repos/rust-vmm/community/issues/comments/522399690", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/community/issues/67#issuecomment-522399690", "created_at": "2019-08-19T03:39:39Z", "id": 522399690, "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjM5OTY5MA=="}, {"user": {"following_url": "https://api.github.com/users/andreeaflorescu/following{/other_user}", "url": "https://api.github.com/users/andreeaflorescu", "site_admin": false, "gists_url": "https://api.github.com/users/andreeaflorescu/gists{/gist_id}", "node_id": "MDQ6VXNlcjI4MTU5NDQ=", "starred_url": "https://api.github.com/users/andreeaflorescu/starred{/owner}{/repo}", "gravatar_id": "", "id": 2815944, "events_url": "https://api.github.com/users/andreeaflorescu/events{/privacy}", "avatar_url": "https://avatars0.githubusercontent.com/u/2815944?v=4", "login": "andreeaflorescu", "repos_url": "https://api.github.com/users/andreeaflorescu/repos", "subscriptions_url": "https://api.github.com/users/andreeaflorescu/subscriptions", "followers_url": "https://api.github.com/users/andreeaflorescu/followers", "html_url": "https://github.com/andreeaflorescu", "received_events_url": "https://api.github.com/users/andreeaflorescu/received_events", "type": "User", "organizations_url": "https://api.github.com/users/andreeaflorescu/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/community/issues/67", "body": "> > My honest opinion is that it's too early to plan for live-migration when we don't even have the minimal crates in rust-vmm to create a dummy VMM. I also believe that live-migration depends (or better said) should depend on the implementation of devices and other components in rust-vmm. At this moment we don't have a high level design of how future and current rust-vmm components will interact. We also don't have the basic components in rust-vmm like common virtio implementations.\r\n> \r\n> Live migration does depend on many components, e.g. the vcpu/devices/memory/etc. But rust-vmm does not have most of them now. Furthermore, rust-vmm does not have basic components now and miss a high level design. Shall we consider it and make a road-map ASAP? I think live migration should be a good start to trigger the consideration and discussion.\r\n\r\nYes, I think we should start working on the roadmap and the high level design. That should speed up the development process. It would also be a great way to prioritize the work and making sure we are focusing on the right components. I will send an email about this as it was on my mind for quite some time now.\r\n\r\n", "updated_at": "2019-08-19T06:58:54Z", "url": "https://api.github.com/repos/rust-vmm/community/issues/comments/522439225", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/community/issues/67#issuecomment-522439225", "created_at": "2019-08-19T06:58:54Z", "id": 522439225, "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjQzOTIyNQ=="}]