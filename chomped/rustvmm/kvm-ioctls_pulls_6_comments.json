[{"user": {"following_url": "https://api.github.com/users/serban300/following{/other_user}", "url": "https://api.github.com/users/serban300", "site_admin": false, "gists_url": "https://api.github.com/users/serban300/gists{/gist_id}", "node_id": "MDQ6VXNlcjE4MTI0MDYy", "starred_url": "https://api.github.com/users/serban300/starred{/owner}{/repo}", "gravatar_id": "", "id": 18124062, "events_url": "https://api.github.com/users/serban300/events{/privacy}", "avatar_url": "https://avatars1.githubusercontent.com/u/18124062?v=4", "login": "serban300", "repos_url": "https://api.github.com/users/serban300/repos", "subscriptions_url": "https://api.github.com/users/serban300/subscriptions", "followers_url": "https://api.github.com/users/serban300/followers", "html_url": "https://github.com/serban300", "received_events_url": "https://api.github.com/users/serban300/received_events", "type": "User", "organizations_url": "https://api.github.com/users/serban300/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/kvm-ioctls/issues/6", "body": "Can't think of meaningfull usage examples that would compile since KvmArray and KvmVec are private\r\n> Please add usage examples for the public interface in doc comments. Some examples in this PR: #13\r\n\r\n", "updated_at": "2019-04-09T10:28:01Z", "url": "https://api.github.com/repos/rust-vmm/kvm-ioctls/issues/comments/481195480", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/kvm-ioctls/pull/6#issuecomment-481195480", "created_at": "2019-04-09T10:27:43Z", "id": 481195480, "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MTE5NTQ4MA=="}, {"user": {"following_url": "https://api.github.com/users/andreeaflorescu/following{/other_user}", "url": "https://api.github.com/users/andreeaflorescu", "site_admin": false, "gists_url": "https://api.github.com/users/andreeaflorescu/gists{/gist_id}", "node_id": "MDQ6VXNlcjI4MTU5NDQ=", "starred_url": "https://api.github.com/users/andreeaflorescu/starred{/owner}{/repo}", "gravatar_id": "", "id": 2815944, "events_url": "https://api.github.com/users/andreeaflorescu/events{/privacy}", "avatar_url": "https://avatars0.githubusercontent.com/u/2815944?v=4", "login": "andreeaflorescu", "repos_url": "https://api.github.com/users/andreeaflorescu/repos", "subscriptions_url": "https://api.github.com/users/andreeaflorescu/subscriptions", "followers_url": "https://api.github.com/users/andreeaflorescu/followers", "html_url": "https://github.com/andreeaflorescu", "received_events_url": "https://api.github.com/users/andreeaflorescu/received_events", "type": "User", "organizations_url": "https://api.github.com/users/andreeaflorescu/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/kvm-ioctls/issues/6", "body": "@serban300 as discussed offline the trait needs to be public so you can access the methods associated with CpuId. If you do some more investigation and you discover that they actually don't need to be public, we can write the usage examples for either CpuId or for MSRs.", "updated_at": "2019-04-09T14:55:34Z", "url": "https://api.github.com/repos/rust-vmm/kvm-ioctls/issues/comments/481287209", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/kvm-ioctls/pull/6#issuecomment-481287209", "created_at": "2019-04-09T14:55:34Z", "id": 481287209, "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MTI4NzIwOQ=="}, {"user": {"following_url": "https://api.github.com/users/serban300/following{/other_user}", "url": "https://api.github.com/users/serban300", "site_admin": false, "gists_url": "https://api.github.com/users/serban300/gists{/gist_id}", "node_id": "MDQ6VXNlcjE4MTI0MDYy", "starred_url": "https://api.github.com/users/serban300/starred{/owner}{/repo}", "gravatar_id": "", "id": 18124062, "events_url": "https://api.github.com/users/serban300/events{/privacy}", "avatar_url": "https://avatars1.githubusercontent.com/u/18124062?v=4", "login": "serban300", "repos_url": "https://api.github.com/users/serban300/repos", "subscriptions_url": "https://api.github.com/users/serban300/subscriptions", "followers_url": "https://api.github.com/users/serban300/followers", "html_url": "https://github.com/serban300", "received_events_url": "https://api.github.com/users/serban300/received_events", "type": "User", "organizations_url": "https://api.github.com/users/serban300/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/kvm-ioctls/issues/6", "body": "@andreeaflorescu I added examples", "updated_at": "2019-04-10T13:39:43Z", "url": "https://api.github.com/repos/rust-vmm/kvm-ioctls/issues/comments/481694990", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/kvm-ioctls/pull/6#issuecomment-481694990", "created_at": "2019-04-10T13:39:43Z", "id": 481694990, "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MTY5NDk5MA=="}, {"user": {"following_url": "https://api.github.com/users/jiangliu/following{/other_user}", "url": "https://api.github.com/users/jiangliu", "site_admin": false, "gists_url": "https://api.github.com/users/jiangliu/gists{/gist_id}", "node_id": "MDQ6VXNlcjE5MzE1MTY=", "starred_url": "https://api.github.com/users/jiangliu/starred{/owner}{/repo}", "gravatar_id": "", "id": 1931516, "events_url": "https://api.github.com/users/jiangliu/events{/privacy}", "avatar_url": "https://avatars0.githubusercontent.com/u/1931516?v=4", "login": "jiangliu", "repos_url": "https://api.github.com/users/jiangliu/repos", "subscriptions_url": "https://api.github.com/users/jiangliu/subscriptions", "followers_url": "https://api.github.com/users/jiangliu/followers", "html_url": "https://github.com/jiangliu", "received_events_url": "https://api.github.com/users/jiangliu/received_events", "type": "User", "organizations_url": "https://api.github.com/users/jiangliu/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/kvm-ioctls/issues/6", "body": "Seems it's a common issue to deal with zero-sized array. Is there any best known methods for rust to support such a case? Or could we extend a basic rust-vmm crate to export helper macros/traits to deal with zero-sized array?", "updated_at": "2019-04-19T08:14:45Z", "url": "https://api.github.com/repos/rust-vmm/kvm-ioctls/issues/comments/484803584", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/kvm-ioctls/pull/6#issuecomment-484803584", "created_at": "2019-04-19T08:14:45Z", "id": 484803584, "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NDgwMzU4NA=="}, {"user": {"following_url": "https://api.github.com/users/serban300/following{/other_user}", "url": "https://api.github.com/users/serban300", "site_admin": false, "gists_url": "https://api.github.com/users/serban300/gists{/gist_id}", "node_id": "MDQ6VXNlcjE4MTI0MDYy", "starred_url": "https://api.github.com/users/serban300/starred{/owner}{/repo}", "gravatar_id": "", "id": 18124062, "events_url": "https://api.github.com/users/serban300/events{/privacy}", "avatar_url": "https://avatars1.githubusercontent.com/u/18124062?v=4", "login": "serban300", "repos_url": "https://api.github.com/users/serban300/repos", "subscriptions_url": "https://api.github.com/users/serban300/subscriptions", "followers_url": "https://api.github.com/users/serban300/followers", "html_url": "https://github.com/serban300", "received_events_url": "https://api.github.com/users/serban300/received_events", "type": "User", "organizations_url": "https://api.github.com/users/serban300/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/kvm-ioctls/issues/6", "body": "> Seems it's a common issue to deal with zero-sized array. Is there any best known methods for rust to support such a case? Or could we extend a basic rust-vmm crate to export helper macros/traits to deal with zero-sized array?\r\n\r\nIf zero-sized arrays are needed outside of the kvm-ioctls crate then implementing them in a separate crate with helpers / commons sounds good to me. Anyway since I'm not very familiar with rust-vmm I would need to get more opinions on this issue.", "updated_at": "2019-04-19T11:45:13Z", "url": "https://api.github.com/repos/rust-vmm/kvm-ioctls/issues/comments/484868467", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/kvm-ioctls/pull/6#issuecomment-484868467", "created_at": "2019-04-19T11:45:13Z", "id": 484868467, "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NDg2ODQ2Nw=="}, {"user": {"following_url": "https://api.github.com/users/andreeaflorescu/following{/other_user}", "url": "https://api.github.com/users/andreeaflorescu", "site_admin": false, "gists_url": "https://api.github.com/users/andreeaflorescu/gists{/gist_id}", "node_id": "MDQ6VXNlcjI4MTU5NDQ=", "starred_url": "https://api.github.com/users/andreeaflorescu/starred{/owner}{/repo}", "gravatar_id": "", "id": 2815944, "events_url": "https://api.github.com/users/andreeaflorescu/events{/privacy}", "avatar_url": "https://avatars0.githubusercontent.com/u/2815944?v=4", "login": "andreeaflorescu", "repos_url": "https://api.github.com/users/andreeaflorescu/repos", "subscriptions_url": "https://api.github.com/users/andreeaflorescu/subscriptions", "followers_url": "https://api.github.com/users/andreeaflorescu/followers", "html_url": "https://github.com/andreeaflorescu", "received_events_url": "https://api.github.com/users/andreeaflorescu/received_events", "type": "User", "organizations_url": "https://api.github.com/users/andreeaflorescu/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/kvm-ioctls/issues/6", "body": "We can ask people in the rust-vmm list what they think about this. @serban300 can you please send an email?\r\n\r\nI believe the plan right now it to move the CpuId definition to vmm-vcpu. See https://github.com/rust-vmm/vmm-vcpu/pull/3", "updated_at": "2019-04-19T12:09:35Z", "url": "https://api.github.com/repos/rust-vmm/kvm-ioctls/issues/comments/484874591", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/kvm-ioctls/pull/6#issuecomment-484874591", "created_at": "2019-04-19T12:09:35Z", "id": 484874591, "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NDg3NDU5MQ=="}, {"user": {"following_url": "https://api.github.com/users/sboeuf/following{/other_user}", "url": "https://api.github.com/users/sboeuf", "site_admin": false, "gists_url": "https://api.github.com/users/sboeuf/gists{/gist_id}", "node_id": "MDQ6VXNlcjIyODkwNDEz", "starred_url": "https://api.github.com/users/sboeuf/starred{/owner}{/repo}", "gravatar_id": "", "id": 22890413, "events_url": "https://api.github.com/users/sboeuf/events{/privacy}", "avatar_url": "https://avatars3.githubusercontent.com/u/22890413?v=4", "login": "sboeuf", "repos_url": "https://api.github.com/users/sboeuf/repos", "subscriptions_url": "https://api.github.com/users/sboeuf/subscriptions", "followers_url": "https://api.github.com/users/sboeuf/followers", "html_url": "https://github.com/sboeuf", "received_events_url": "https://api.github.com/users/sboeuf/received_events", "type": "User", "organizations_url": "https://api.github.com/users/sboeuf/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/kvm-ioctls/issues/6", "body": "@serban300 \r\n>If zero-sized arrays are needed outside of the kvm-ioctls crate then implementing them in a separate crate with helpers / commons sounds good to me. Anyway since I'm not very familiar with rust-vmm I would need to get more opinions on this issue.\r\n\r\nHaving a common crate for this sounds like a sane idea. You should look at the existing crates already present on [crates.io](https://crates.io/), maybe you will find something there.\r\n\r\nWhat would be the name of the crate btw? `rust-common`?\r\n\r\n>I believe the plan right now it to move the CpuId definition to vmm-vcpu. See rust-vmm/vmm-vcpu#3\r\n\r\nThat's my understanding too!", "updated_at": "2019-04-23T23:41:33Z", "url": "https://api.github.com/repos/rust-vmm/kvm-ioctls/issues/comments/486013304", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/kvm-ioctls/pull/6#issuecomment-486013304", "created_at": "2019-04-23T23:41:33Z", "id": 486013304, "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NjAxMzMwNA=="}, {"user": {"following_url": "https://api.github.com/users/andreeaflorescu/following{/other_user}", "url": "https://api.github.com/users/andreeaflorescu", "site_admin": false, "gists_url": "https://api.github.com/users/andreeaflorescu/gists{/gist_id}", "node_id": "MDQ6VXNlcjI4MTU5NDQ=", "starred_url": "https://api.github.com/users/andreeaflorescu/starred{/owner}{/repo}", "gravatar_id": "", "id": 2815944, "events_url": "https://api.github.com/users/andreeaflorescu/events{/privacy}", "avatar_url": "https://avatars0.githubusercontent.com/u/2815944?v=4", "login": "andreeaflorescu", "repos_url": "https://api.github.com/users/andreeaflorescu/repos", "subscriptions_url": "https://api.github.com/users/andreeaflorescu/subscriptions", "followers_url": "https://api.github.com/users/andreeaflorescu/followers", "html_url": "https://github.com/andreeaflorescu", "received_events_url": "https://api.github.com/users/andreeaflorescu/received_events", "type": "User", "organizations_url": "https://api.github.com/users/andreeaflorescu/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/kvm-ioctls/issues/6", "body": "I am thinking that maybe we should instead place it in vmm-sys-utils instead of having a separate crate for it. I don't have a lot of experience here, but is this really a general problem? Do we think that in the future we will have to handle other 0-sized arrays besides the ones we have in KVM? I would be interested to see some other usecases for which this would need to live in a separate crate.", "updated_at": "2019-04-24T00:37:29Z", "url": "https://api.github.com/repos/rust-vmm/kvm-ioctls/issues/comments/486023477", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/kvm-ioctls/pull/6#issuecomment-486023477", "created_at": "2019-04-24T00:37:29Z", "id": 486023477, "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NjAyMzQ3Nw=="}, {"user": {"following_url": "https://api.github.com/users/jennymankin/following{/other_user}", "url": "https://api.github.com/users/jennymankin", "site_admin": false, "gists_url": "https://api.github.com/users/jennymankin/gists{/gist_id}", "node_id": "MDQ6VXNlcjQ0ODc3NTQy", "starred_url": "https://api.github.com/users/jennymankin/starred{/owner}{/repo}", "gravatar_id": "", "id": 44877542, "events_url": "https://api.github.com/users/jennymankin/events{/privacy}", "avatar_url": "https://avatars0.githubusercontent.com/u/44877542?v=4", "login": "jennymankin", "repos_url": "https://api.github.com/users/jennymankin/repos", "subscriptions_url": "https://api.github.com/users/jennymankin/subscriptions", "followers_url": "https://api.github.com/users/jennymankin/followers", "html_url": "https://github.com/jennymankin", "received_events_url": "https://api.github.com/users/jennymankin/received_events", "type": "User", "organizations_url": "https://api.github.com/users/jennymankin/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/kvm-ioctls/issues/6", "body": "I think it makes sense to move the traits of `kvm_vec` to a common crate (or to vmm-sys-utils if that's the better option). Then the implementations of the `kvm_vec` for CPUID and MSR vectors would ultimately go in the Vcpu crate.\r\n\r\nAs things will no longer reside in a specific kvm-ioctls crate, and will instead be intended to be used in VMM-agnostic crates, could you rename things to avoid `KVM`-specific naming? File names like `kvm_vec.rs`, trait names like `KvmVec`, etc.", "updated_at": "2019-04-24T04:14:41Z", "url": "https://api.github.com/repos/rust-vmm/kvm-ioctls/issues/comments/486060814", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/kvm-ioctls/pull/6#issuecomment-486060814", "created_at": "2019-04-24T04:14:41Z", "id": 486060814, "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NjA2MDgxNA=="}, {"user": {"following_url": "https://api.github.com/users/jennymankin/following{/other_user}", "url": "https://api.github.com/users/jennymankin", "site_admin": false, "gists_url": "https://api.github.com/users/jennymankin/gists{/gist_id}", "node_id": "MDQ6VXNlcjQ0ODc3NTQy", "starred_url": "https://api.github.com/users/jennymankin/starred{/owner}{/repo}", "gravatar_id": "", "id": 44877542, "events_url": "https://api.github.com/users/jennymankin/events{/privacy}", "avatar_url": "https://avatars0.githubusercontent.com/u/44877542?v=4", "login": "jennymankin", "repos_url": "https://api.github.com/users/jennymankin/repos", "subscriptions_url": "https://api.github.com/users/jennymankin/subscriptions", "followers_url": "https://api.github.com/users/jennymankin/followers", "html_url": "https://github.com/jennymankin", "received_events_url": "https://api.github.com/users/jennymankin/received_events", "type": "User", "organizations_url": "https://api.github.com/users/jennymankin/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/kvm-ioctls/issues/6", "body": "On a similar note, something I found while moving the old `CpuId` implementation into the `Vcpu` crate is that doc tests with KVM-specific or Unix-specific crates or APIs will cause `cargo test` to fail on Windows.  In cases where the example is instructive and can't be modified to avoid such dependencies, `cfg(unix)` will at least prevent the doc tests from failing on Windows. For example:\r\n\r\n```\r\n    /// ```cfg(unix)\r\n    /// extern crate kvm_ioctls;\r\n    /// \r\n    /// use kvm_ioctls::Kvm;\r\n    /// use vmm_vcpu::x86_64::{CpuId, MAX_CPUID_ENTRIES};\r\n    /// \r\n    /// # fn main() {\r\n    ///     let kvm = Kvm::new().unwrap();\r\n    ///     let mut cpuid = kvm.get_supported_cpuid(MAX_CPUID_ENTRIES).unwrap();\r\n    ///     let cpuid_entries = cpuid.mut_entries_slice();\r\n    /// # }\r\n    /// \r\n    /// ```\r\n```", "updated_at": "2019-04-24T04:16:36Z", "url": "https://api.github.com/repos/rust-vmm/kvm-ioctls/issues/comments/486061072", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/kvm-ioctls/pull/6#issuecomment-486061072", "created_at": "2019-04-24T04:16:06Z", "id": 486061072, "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NjA2MTA3Mg=="}, {"user": {"following_url": "https://api.github.com/users/jiangliu/following{/other_user}", "url": "https://api.github.com/users/jiangliu", "site_admin": false, "gists_url": "https://api.github.com/users/jiangliu/gists{/gist_id}", "node_id": "MDQ6VXNlcjE5MzE1MTY=", "starred_url": "https://api.github.com/users/jiangliu/starred{/owner}{/repo}", "gravatar_id": "", "id": 1931516, "events_url": "https://api.github.com/users/jiangliu/events{/privacy}", "avatar_url": "https://avatars0.githubusercontent.com/u/1931516?v=4", "login": "jiangliu", "repos_url": "https://api.github.com/users/jiangliu/repos", "subscriptions_url": "https://api.github.com/users/jiangliu/subscriptions", "followers_url": "https://api.github.com/users/jiangliu/followers", "html_url": "https://github.com/jiangliu", "received_events_url": "https://api.github.com/users/jiangliu/received_events", "type": "User", "organizations_url": "https://api.github.com/users/jiangliu/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/kvm-ioctls/issues/6", "body": "It\u2019s a common case for Linux ioctl related data structures, and Vhost has similar cases.\nI think it\u2019s ok to include it into the vmm-sys-utils crate.\n\n> On Apr 24, 2019, at 8:37 AM, Andreea Florescu <notifications@github.com <mailto:notifications@github.com>> wrote:\n> \n> I am thinking that maybe we should instead place it in vmm-sys-utils instead of having a separate crate for it. I don't have a lot of experience here, but is this really a general problem? Do we think that in the future we will have to handle other 0-sized arrays besides the ones we have in KVM? I would be interested to see some other usecases for which this would need to live in a separate crate.\n> \n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub <https://github.com/rust-vmm/kvm-ioctls/pull/6#issuecomment-486023477>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AAOXR7GQZLBIDNT2MMSGR4DPR6TUVANCNFSM4HCKZ7EA>.\n> \n\n", "updated_at": "2019-04-24T05:47:13Z", "url": "https://api.github.com/repos/rust-vmm/kvm-ioctls/issues/comments/486077086", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/kvm-ioctls/pull/6#issuecomment-486077086", "created_at": "2019-04-24T05:47:13Z", "id": 486077086, "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NjA3NzA4Ng=="}, {"user": {"following_url": "https://api.github.com/users/serban300/following{/other_user}", "url": "https://api.github.com/users/serban300", "site_admin": false, "gists_url": "https://api.github.com/users/serban300/gists{/gist_id}", "node_id": "MDQ6VXNlcjE4MTI0MDYy", "starred_url": "https://api.github.com/users/serban300/starred{/owner}{/repo}", "gravatar_id": "", "id": 18124062, "events_url": "https://api.github.com/users/serban300/events{/privacy}", "avatar_url": "https://avatars1.githubusercontent.com/u/18124062?v=4", "login": "serban300", "repos_url": "https://api.github.com/users/serban300/repos", "subscriptions_url": "https://api.github.com/users/serban300/subscriptions", "followers_url": "https://api.github.com/users/serban300/followers", "html_url": "https://github.com/serban300", "received_events_url": "https://api.github.com/users/serban300/received_events", "type": "User", "organizations_url": "https://api.github.com/users/serban300/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/kvm-ioctls/issues/6", "body": "Thanks everyone for the feedback !\r\n\r\nIt would be nice if there was something similar on crates.io . I couldn't find anything so far. I will keep looking, but I think the chances are very slim.\r\n\r\nAnyway, it seems that there is a consensus around using the vmm-sys-util crate. It looks good to me also. I will submit a PR there as soon as https://github.com/rust-vmm/vmm-sys-util/pull/1 is merged. Also I will make some changes in order to avoid KVM specific naming.", "updated_at": "2019-04-24T09:33:16Z", "url": "https://api.github.com/repos/rust-vmm/kvm-ioctls/issues/comments/486145188", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/kvm-ioctls/pull/6#issuecomment-486145188", "created_at": "2019-04-24T09:33:16Z", "id": 486145188, "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NjE0NTE4OA=="}, {"user": {"following_url": "https://api.github.com/users/serban300/following{/other_user}", "url": "https://api.github.com/users/serban300", "site_admin": false, "gists_url": "https://api.github.com/users/serban300/gists{/gist_id}", "node_id": "MDQ6VXNlcjE4MTI0MDYy", "starred_url": "https://api.github.com/users/serban300/starred{/owner}{/repo}", "gravatar_id": "", "id": 18124062, "events_url": "https://api.github.com/users/serban300/events{/privacy}", "avatar_url": "https://avatars1.githubusercontent.com/u/18124062?v=4", "login": "serban300", "repos_url": "https://api.github.com/users/serban300/repos", "subscriptions_url": "https://api.github.com/users/serban300/subscriptions", "followers_url": "https://api.github.com/users/serban300/followers", "html_url": "https://github.com/serban300", "received_events_url": "https://api.github.com/users/serban300/received_events", "type": "User", "organizations_url": "https://api.github.com/users/serban300/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/kvm-ioctls/issues/6", "body": "Closing in favor of https://github.com/rust-vmm/vmm-sys-util/pull/4", "updated_at": "2019-05-31T13:24:55Z", "url": "https://api.github.com/repos/rust-vmm/kvm-ioctls/issues/comments/497707498", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/kvm-ioctls/pull/6#issuecomment-497707498", "created_at": "2019-05-31T13:24:55Z", "id": 497707498, "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NzcwNzQ5OA=="}]