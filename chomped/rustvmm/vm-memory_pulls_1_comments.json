[{"user": {"following_url": "https://api.github.com/users/jiangliu/following{/other_user}", "url": "https://api.github.com/users/jiangliu", "site_admin": false, "gists_url": "https://api.github.com/users/jiangliu/gists{/gist_id}", "node_id": "MDQ6VXNlcjE5MzE1MTY=", "starred_url": "https://api.github.com/users/jiangliu/starred{/owner}{/repo}", "gravatar_id": "", "id": 1931516, "events_url": "https://api.github.com/users/jiangliu/events{/privacy}", "avatar_url": "https://avatars0.githubusercontent.com/u/1931516?v=4", "login": "jiangliu", "repos_url": "https://api.github.com/users/jiangliu/repos", "subscriptions_url": "https://api.github.com/users/jiangliu/subscriptions", "followers_url": "https://api.github.com/users/jiangliu/followers", "html_url": "https://github.com/jiangliu", "received_events_url": "https://api.github.com/users/jiangliu/received_events", "type": "User", "organizations_url": "https://api.github.com/users/jiangliu/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/vm-memory/issues/1", "body": "Please refer to following links for related discussions:\r\nhttps://github.com/rust-vmm/community/issues/22\r\nhttps://github.com/rust-vmm/community/issues/16", "updated_at": "2019-02-28T14:24:49Z", "url": "https://api.github.com/repos/rust-vmm/vm-memory/issues/comments/468291051", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/vm-memory/pull/1#issuecomment-468291051", "created_at": "2019-02-28T14:24:49Z", "id": 468291051, "node_id": "MDEyOklzc3VlQ29tbWVudDQ2ODI5MTA1MQ=="}, {"user": {"following_url": "https://api.github.com/users/alexandruag/following{/other_user}", "url": "https://api.github.com/users/alexandruag", "site_admin": false, "gists_url": "https://api.github.com/users/alexandruag/gists{/gist_id}", "node_id": "MDQ6VXNlcjEwOTg5Nzg3", "starred_url": "https://api.github.com/users/alexandruag/starred{/owner}{/repo}", "gravatar_id": "", "id": 10989787, "events_url": "https://api.github.com/users/alexandruag/events{/privacy}", "avatar_url": "https://avatars1.githubusercontent.com/u/10989787?v=4", "login": "alexandruag", "repos_url": "https://api.github.com/users/alexandruag/repos", "subscriptions_url": "https://api.github.com/users/alexandruag/subscriptions", "followers_url": "https://api.github.com/users/alexandruag/followers", "html_url": "https://github.com/alexandruag", "received_events_url": "https://api.github.com/users/alexandruag/received_events", "type": "User", "organizations_url": "https://api.github.com/users/alexandruag/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/vm-memory/issues/1", "body": "Hi, for how long is this still open for comments?", "updated_at": "2019-03-05T16:54:43Z", "url": "https://api.github.com/repos/rust-vmm/vm-memory/issues/comments/469760104", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/vm-memory/pull/1#issuecomment-469760104", "created_at": "2019-03-05T16:54:43Z", "id": 469760104, "node_id": "MDEyOklzc3VlQ29tbWVudDQ2OTc2MDEwNA=="}, {"user": {"following_url": "https://api.github.com/users/jiangliu/following{/other_user}", "url": "https://api.github.com/users/jiangliu", "site_admin": false, "gists_url": "https://api.github.com/users/jiangliu/gists{/gist_id}", "node_id": "MDQ6VXNlcjE5MzE1MTY=", "starred_url": "https://api.github.com/users/jiangliu/starred{/owner}{/repo}", "gravatar_id": "", "id": 1931516, "events_url": "https://api.github.com/users/jiangliu/events{/privacy}", "avatar_url": "https://avatars0.githubusercontent.com/u/1931516?v=4", "login": "jiangliu", "repos_url": "https://api.github.com/users/jiangliu/repos", "subscriptions_url": "https://api.github.com/users/jiangliu/subscriptions", "followers_url": "https://api.github.com/users/jiangliu/followers", "html_url": "https://github.com/jiangliu", "received_events_url": "https://api.github.com/users/jiangliu/received_events", "type": "User", "organizations_url": "https://api.github.com/users/jiangliu/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/vm-memory/issues/1", "body": "Hope it could be closed within this week:)\r\nIf there are still improvements required, we may do them with other PRs.", "updated_at": "2019-03-05T17:23:52Z", "url": "https://api.github.com/repos/rust-vmm/vm-memory/issues/comments/469772259", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/vm-memory/pull/1#issuecomment-469772259", "created_at": "2019-03-05T17:23:52Z", "id": 469772259, "node_id": "MDEyOklzc3VlQ29tbWVudDQ2OTc3MjI1OQ=="}, {"user": {"following_url": "https://api.github.com/users/sameo/following{/other_user}", "url": "https://api.github.com/users/sameo", "site_admin": false, "gists_url": "https://api.github.com/users/sameo/gists{/gist_id}", "node_id": "MDQ6VXNlcjEwNDM4NjM=", "starred_url": "https://api.github.com/users/sameo/starred{/owner}{/repo}", "gravatar_id": "", "id": 1043863, "events_url": "https://api.github.com/users/sameo/events{/privacy}", "avatar_url": "https://avatars2.githubusercontent.com/u/1043863?v=4", "login": "sameo", "repos_url": "https://api.github.com/users/sameo/repos", "subscriptions_url": "https://api.github.com/users/sameo/subscriptions", "followers_url": "https://api.github.com/users/sameo/followers", "html_url": "https://github.com/sameo", "received_events_url": "https://api.github.com/users/sameo/received_events", "type": "User", "organizations_url": "https://api.github.com/users/sameo/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/vm-memory/issues/1", "body": "> Hi, for how long is this still open for comments?\r\n\r\n@alexandruag Until at least 2 team members will approve it. We can definitely hold it until you review it.", "updated_at": "2019-03-05T17:52:40Z", "url": "https://api.github.com/repos/rust-vmm/vm-memory/issues/comments/469783114", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/vm-memory/pull/1#issuecomment-469783114", "created_at": "2019-03-05T17:52:17Z", "id": 469783114, "node_id": "MDEyOklzc3VlQ29tbWVudDQ2OTc4MzExNA=="}, {"user": {"following_url": "https://api.github.com/users/alexandruag/following{/other_user}", "url": "https://api.github.com/users/alexandruag", "site_admin": false, "gists_url": "https://api.github.com/users/alexandruag/gists{/gist_id}", "node_id": "MDQ6VXNlcjEwOTg5Nzg3", "starred_url": "https://api.github.com/users/alexandruag/starred{/owner}{/repo}", "gravatar_id": "", "id": 10989787, "events_url": "https://api.github.com/users/alexandruag/events{/privacy}", "avatar_url": "https://avatars1.githubusercontent.com/u/10989787?v=4", "login": "alexandruag", "repos_url": "https://api.github.com/users/alexandruag/repos", "subscriptions_url": "https://api.github.com/users/alexandruag/subscriptions", "followers_url": "https://api.github.com/users/alexandruag/followers", "html_url": "https://github.com/alexandruag", "received_events_url": "https://api.github.com/users/alexandruag/received_events", "type": "User", "organizations_url": "https://api.github.com/users/alexandruag/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/vm-memory/issues/1", "body": "> > Hi, for how long is this still open for comments?\r\n> \r\n> @alexandruag Until at least 2 team members will approve it. We can definitely hold it until you review it.\r\n\r\nThanks, I just had some comments but also wanted to really try and understand the entire thing first. Will post something before the end of this week if still allowed :D \r\n", "updated_at": "2019-03-06T16:13:23Z", "url": "https://api.github.com/repos/rust-vmm/vm-memory/issues/comments/470169533", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/vm-memory/pull/1#issuecomment-470169533", "created_at": "2019-03-06T16:13:23Z", "id": 470169533, "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MDE2OTUzMw=="}, {"user": {"following_url": "https://api.github.com/users/sameo/following{/other_user}", "url": "https://api.github.com/users/sameo", "site_admin": false, "gists_url": "https://api.github.com/users/sameo/gists{/gist_id}", "node_id": "MDQ6VXNlcjEwNDM4NjM=", "starred_url": "https://api.github.com/users/sameo/starred{/owner}{/repo}", "gravatar_id": "", "id": 1043863, "events_url": "https://api.github.com/users/sameo/events{/privacy}", "avatar_url": "https://avatars2.githubusercontent.com/u/1043863?v=4", "login": "sameo", "repos_url": "https://api.github.com/users/sameo/repos", "subscriptions_url": "https://api.github.com/users/sameo/subscriptions", "followers_url": "https://api.github.com/users/sameo/followers", "html_url": "https://github.com/sameo", "received_events_url": "https://api.github.com/users/sameo/received_events", "type": "User", "organizations_url": "https://api.github.com/users/sameo/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/vm-memory/issues/1", "body": "@alexandruag Did you have time to look at this PR?", "updated_at": "2019-03-13T09:26:38Z", "url": "https://api.github.com/repos/rust-vmm/vm-memory/issues/comments/472344002", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/vm-memory/pull/1#issuecomment-472344002", "created_at": "2019-03-13T09:26:38Z", "id": 472344002, "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MjM0NDAwMg=="}, {"user": {"following_url": "https://api.github.com/users/alexandruag/following{/other_user}", "url": "https://api.github.com/users/alexandruag", "site_admin": false, "gists_url": "https://api.github.com/users/alexandruag/gists{/gist_id}", "node_id": "MDQ6VXNlcjEwOTg5Nzg3", "starred_url": "https://api.github.com/users/alexandruag/starred{/owner}{/repo}", "gravatar_id": "", "id": 10989787, "events_url": "https://api.github.com/users/alexandruag/events{/privacy}", "avatar_url": "https://avatars1.githubusercontent.com/u/10989787?v=4", "login": "alexandruag", "repos_url": "https://api.github.com/users/alexandruag/repos", "subscriptions_url": "https://api.github.com/users/alexandruag/subscriptions", "followers_url": "https://api.github.com/users/alexandruag/followers", "html_url": "https://github.com/alexandruag", "received_events_url": "https://api.github.com/users/alexandruag/received_events", "type": "User", "organizations_url": "https://api.github.com/users/alexandruag/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/vm-memory/issues/1", "body": "> @alexandruag Did you have time to look at this PR?\r\n\r\nI still have to go through some things. It would be great if you can allow us a couple more days. I'm very very sorry about the delay, and it's totally understandable if you want to draw a line and move forward.", "updated_at": "2019-03-13T10:43:50Z", "url": "https://api.github.com/repos/rust-vmm/vm-memory/issues/comments/472371041", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/vm-memory/pull/1#issuecomment-472371041", "created_at": "2019-03-13T10:43:50Z", "id": 472371041, "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MjM3MTA0MQ=="}, {"user": {"following_url": "https://api.github.com/users/bonzini/following{/other_user}", "url": "https://api.github.com/users/bonzini", "site_admin": false, "gists_url": "https://api.github.com/users/bonzini/gists{/gist_id}", "node_id": "MDQ6VXNlcjQyMDgy", "starred_url": "https://api.github.com/users/bonzini/starred{/owner}{/repo}", "gravatar_id": "", "id": 42082, "events_url": "https://api.github.com/users/bonzini/events{/privacy}", "avatar_url": "https://avatars2.githubusercontent.com/u/42082?v=4", "login": "bonzini", "repos_url": "https://api.github.com/users/bonzini/repos", "subscriptions_url": "https://api.github.com/users/bonzini/subscriptions", "followers_url": "https://api.github.com/users/bonzini/followers", "html_url": "https://github.com/bonzini", "received_events_url": "https://api.github.com/users/bonzini/received_events", "type": "User", "organizations_url": "https://api.github.com/users/bonzini/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/vm-memory/issues/1", "body": "I will take a look at Alexandu's review and make some changes tomorrow.", "updated_at": "2019-03-17T19:07:52Z", "url": "https://api.github.com/repos/rust-vmm/vm-memory/issues/comments/473704884", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/vm-memory/pull/1#issuecomment-473704884", "created_at": "2019-03-17T19:07:52Z", "id": 473704884, "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MzcwNDg4NA=="}, {"user": {"following_url": "https://api.github.com/users/bonzini/following{/other_user}", "url": "https://api.github.com/users/bonzini", "site_admin": false, "gists_url": "https://api.github.com/users/bonzini/gists{/gist_id}", "node_id": "MDQ6VXNlcjQyMDgy", "starred_url": "https://api.github.com/users/bonzini/starred{/owner}{/repo}", "gravatar_id": "", "id": 42082, "events_url": "https://api.github.com/users/bonzini/events{/privacy}", "avatar_url": "https://avatars2.githubusercontent.com/u/42082?v=4", "login": "bonzini", "repos_url": "https://api.github.com/users/bonzini/repos", "subscriptions_url": "https://api.github.com/users/bonzini/subscriptions", "followers_url": "https://api.github.com/users/bonzini/followers", "html_url": "https://github.com/bonzini", "received_events_url": "https://api.github.com/users/bonzini/received_events", "type": "User", "organizations_url": "https://api.github.com/users/bonzini/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/vm-memory/issues/1", "body": "> Why not switch to Rust 2018? (I know Firecracker is still using 2015 \ud83d\udc4e )\r\n\r\nDo you have some specific 2018 features in mind? Even `?` technically is one.\r\n\r\nThe only limit is that we cannot use nightly features because we want to build this code in distro packages and not just distribute it as crates (and distro rustc packages don't enable nightly features).\r\n\r\n> I generally don't like wildcard imports (I don't how to properly call them) because they make code harder to understand, and every now and then you end up exposing something you don't want. What do you think about only using explicit imports, unless there is a very compelling reason to do otherwise?\r\n\r\nWill fix.\r\n\r\n> It looks like the crate would be easier to inspect if we split the code a bit more into modules. What do you think about placing things like Bytes, VolatileMemory, VolatileSlice, VolatileRef, etc. into they own modules (assuming this doesn't makes testing too awkward)?\r\n\r\nUnfortunately it's not possible due to orphan trait rules:\r\n\r\n    impl<T: GuestMemory> Bytes<GuestAddress> for T {\r\n  \r\n  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type parameter `T` must be used as the type parameter for some local type\r\n\r\n\r\n:(", "updated_at": "2019-03-17T19:35:31Z", "url": "https://api.github.com/repos/rust-vmm/vm-memory/issues/comments/473707189", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/vm-memory/pull/1#issuecomment-473707189", "created_at": "2019-03-17T19:35:31Z", "id": 473707189, "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MzcwNzE4OQ=="}, {"user": {"following_url": "https://api.github.com/users/jiangliu/following{/other_user}", "url": "https://api.github.com/users/jiangliu", "site_admin": false, "gists_url": "https://api.github.com/users/jiangliu/gists{/gist_id}", "node_id": "MDQ6VXNlcjE5MzE1MTY=", "starred_url": "https://api.github.com/users/jiangliu/starred{/owner}{/repo}", "gravatar_id": "", "id": 1931516, "events_url": "https://api.github.com/users/jiangliu/events{/privacy}", "avatar_url": "https://avatars0.githubusercontent.com/u/1931516?v=4", "login": "jiangliu", "repos_url": "https://api.github.com/users/jiangliu/repos", "subscriptions_url": "https://api.github.com/users/jiangliu/subscriptions", "followers_url": "https://api.github.com/users/jiangliu/followers", "html_url": "https://github.com/jiangliu", "received_events_url": "https://api.github.com/users/jiangliu/received_events", "type": "User", "organizations_url": "https://api.github.com/users/jiangliu/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/vm-memory/issues/1", "body": "> I will take a look at Alexandu's review and make some changes tomorrow.\r\nSorry for slow response, was on travel last week. So I will wait for your updates and handle remaining issues.\r\n", "updated_at": "2019-03-18T06:00:35Z", "url": "https://api.github.com/repos/rust-vmm/vm-memory/issues/comments/473780481", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/vm-memory/pull/1#issuecomment-473780481", "created_at": "2019-03-18T06:00:35Z", "id": 473780481, "node_id": "MDEyOklzc3VlQ29tbWVudDQ3Mzc4MDQ4MQ=="}, {"user": {"following_url": "https://api.github.com/users/andreeaflorescu/following{/other_user}", "url": "https://api.github.com/users/andreeaflorescu", "site_admin": false, "gists_url": "https://api.github.com/users/andreeaflorescu/gists{/gist_id}", "node_id": "MDQ6VXNlcjI4MTU5NDQ=", "starred_url": "https://api.github.com/users/andreeaflorescu/starred{/owner}{/repo}", "gravatar_id": "", "id": 2815944, "events_url": "https://api.github.com/users/andreeaflorescu/events{/privacy}", "avatar_url": "https://avatars0.githubusercontent.com/u/2815944?v=4", "login": "andreeaflorescu", "repos_url": "https://api.github.com/users/andreeaflorescu/repos", "subscriptions_url": "https://api.github.com/users/andreeaflorescu/subscriptions", "followers_url": "https://api.github.com/users/andreeaflorescu/followers", "html_url": "https://github.com/andreeaflorescu", "received_events_url": "https://api.github.com/users/andreeaflorescu/received_events", "type": "User", "organizations_url": "https://api.github.com/users/andreeaflorescu/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/vm-memory/issues/1", "body": "> > Why not switch to Rust 2018? (I know Firecracker is still using 2015 -1 )\r\n> \r\n> Do you have some specific 2018 features in mind? Even `?` technically is one.\r\n> \r\n> The only limit is that we cannot use nightly features because we want to build this code in distro packages and not just distribute it as crates (and distro rustc packages don't enable nightly features).\r\n\r\nRust 2018 is indeed not yet available in distros, maybe we can wait a bit before switching to Edition 2018. I think the current version in the ones that I've tried is 1.30.0.", "updated_at": "2019-03-18T09:06:58Z", "url": "https://api.github.com/repos/rust-vmm/vm-memory/issues/comments/473825902", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/vm-memory/pull/1#issuecomment-473825902", "created_at": "2019-03-18T09:06:58Z", "id": 473825902, "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MzgyNTkwMg=="}, {"user": {"following_url": "https://api.github.com/users/alexandruag/following{/other_user}", "url": "https://api.github.com/users/alexandruag", "site_admin": false, "gists_url": "https://api.github.com/users/alexandruag/gists{/gist_id}", "node_id": "MDQ6VXNlcjEwOTg5Nzg3", "starred_url": "https://api.github.com/users/alexandruag/starred{/owner}{/repo}", "gravatar_id": "", "id": 10989787, "events_url": "https://api.github.com/users/alexandruag/events{/privacy}", "avatar_url": "https://avatars1.githubusercontent.com/u/10989787?v=4", "login": "alexandruag", "repos_url": "https://api.github.com/users/alexandruag/repos", "subscriptions_url": "https://api.github.com/users/alexandruag/subscriptions", "followers_url": "https://api.github.com/users/alexandruag/followers", "html_url": "https://github.com/alexandruag", "received_events_url": "https://api.github.com/users/alexandruag/received_events", "type": "User", "organizations_url": "https://api.github.com/users/alexandruag/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/vm-memory/issues/1", "body": "Hello, sorry for not being able to attend the meeting today.\r\n\r\n>Do you have some specific 2018 features in mind? Even ? technically is one.\r\n\r\nI don't fully grasp all the enhancements brought by the 2018 edition, but I really like not having to explicitly `extern crate ...` for imported crates and the much nicer path resolution system when `use`-ing/referencing stuff. Some additional features might also start growing on me/other ppl as we find out about them. The downside is, as Andreea mentioned, that older toolchains are no longer usable, but it should become less of a problem as time goes by. Also, the fact that so many distros provide toolchain versions that old is a bit sad.\r\n\r\n>Unfortunately it's not possible due to orphan trait rules:\r\n>impl<T: GuestMemory> Bytes<GuestAddress> for T {\r\n>^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type parameter T must be used as the type parameter for some local type\r\n\r\nI though the orphan rule does not apply when splitting things into separate modules (within the same crate), but anyway that comment was essentially about refactoring, which can be done at a later time.\r\n\r\n", "updated_at": "2019-03-20T16:13:36Z", "url": "https://api.github.com/repos/rust-vmm/vm-memory/issues/comments/474907686", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/vm-memory/pull/1#issuecomment-474907686", "created_at": "2019-03-20T16:13:36Z", "id": 474907686, "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NDkwNzY4Ng=="}, {"user": {"following_url": "https://api.github.com/users/jiangliu/following{/other_user}", "url": "https://api.github.com/users/jiangliu", "site_admin": false, "gists_url": "https://api.github.com/users/jiangliu/gists{/gist_id}", "node_id": "MDQ6VXNlcjE5MzE1MTY=", "starred_url": "https://api.github.com/users/jiangliu/starred{/owner}{/repo}", "gravatar_id": "", "id": 1931516, "events_url": "https://api.github.com/users/jiangliu/events{/privacy}", "avatar_url": "https://avatars0.githubusercontent.com/u/1931516?v=4", "login": "jiangliu", "repos_url": "https://api.github.com/users/jiangliu/repos", "subscriptions_url": "https://api.github.com/users/jiangliu/subscriptions", "followers_url": "https://api.github.com/users/jiangliu/followers", "html_url": "https://github.com/jiangliu", "received_events_url": "https://api.github.com/users/jiangliu/received_events", "type": "User", "organizations_url": "https://api.github.com/users/jiangliu/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/vm-memory/issues/1", "body": "Paolo has mentioned a good point that virtual machines mimic physical machines:)\nFor physical machines, a request crossing memory region boundary is allowed for several cases, such as\n1) the memory hot plug case we have mentioned,\n2) a request crossing NUMA node boundary,\n3) even a request crossing physical memory and MMIO boundary is valid.\n\n> On Mar 21, 2019, at 12:05 AM, Alexandru Agache <notifications@github.com <mailto:notifications@github.com>> wrote:\n> \n> In\n\n", "updated_at": "2019-03-20T16:20:50Z", "url": "https://api.github.com/repos/rust-vmm/vm-memory/issues/comments/474911161", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/vm-memory/pull/1#issuecomment-474911161", "created_at": "2019-03-20T16:20:50Z", "id": 474911161, "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NDkxMTE2MQ=="}, {"user": {"following_url": "https://api.github.com/users/alexandruag/following{/other_user}", "url": "https://api.github.com/users/alexandruag", "site_admin": false, "gists_url": "https://api.github.com/users/alexandruag/gists{/gist_id}", "node_id": "MDQ6VXNlcjEwOTg5Nzg3", "starred_url": "https://api.github.com/users/alexandruag/starred{/owner}{/repo}", "gravatar_id": "", "id": 10989787, "events_url": "https://api.github.com/users/alexandruag/events{/privacy}", "avatar_url": "https://avatars1.githubusercontent.com/u/10989787?v=4", "login": "alexandruag", "repos_url": "https://api.github.com/users/alexandruag/repos", "subscriptions_url": "https://api.github.com/users/alexandruag/subscriptions", "followers_url": "https://api.github.com/users/alexandruag/followers", "html_url": "https://github.com/alexandruag", "received_events_url": "https://api.github.com/users/alexandruag/received_events", "type": "User", "organizations_url": "https://api.github.com/users/alexandruag/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/vm-memory/issues/1", "body": "> Paolo has mentioned a good point that virtual machines mimic physical machines:) For physical machines, a request crossing memory region boundary is allowed for several cases, such as 1) the memory hot plug case we have mentioned, 2) a request crossing NUMA node boundary, 3) even a request crossing physical memory and MMIO boundary is valid.\r\n\r\nI guess what I wanna ask is this: are there any downsides to having an interface (the `GuestMemory` trait) that is agnostic in terms of cross-region memory access, especially since users have full control over which implementation they choose?", "updated_at": "2019-03-20T16:32:28Z", "url": "https://api.github.com/repos/rust-vmm/vm-memory/issues/comments/474916984", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/vm-memory/pull/1#issuecomment-474916984", "created_at": "2019-03-20T16:32:28Z", "id": 474916984, "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NDkxNjk4NA=="}, {"user": {"following_url": "https://api.github.com/users/jiangliu/following{/other_user}", "url": "https://api.github.com/users/jiangliu", "site_admin": false, "gists_url": "https://api.github.com/users/jiangliu/gists{/gist_id}", "node_id": "MDQ6VXNlcjE5MzE1MTY=", "starred_url": "https://api.github.com/users/jiangliu/starred{/owner}{/repo}", "gravatar_id": "", "id": 1931516, "events_url": "https://api.github.com/users/jiangliu/events{/privacy}", "avatar_url": "https://avatars0.githubusercontent.com/u/1931516?v=4", "login": "jiangliu", "repos_url": "https://api.github.com/users/jiangliu/repos", "subscriptions_url": "https://api.github.com/users/jiangliu/subscriptions", "followers_url": "https://api.github.com/users/jiangliu/followers", "html_url": "https://github.com/jiangliu", "received_events_url": "https://api.github.com/users/jiangliu/received_events", "type": "User", "organizations_url": "https://api.github.com/users/jiangliu/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/vm-memory/issues/1", "body": "On Mar 21, 2019, at 12:32 AM, Alexandru Agache <notifications@github.com> wrote:\n> \n> Paolo has mentioned a good point that virtual machines mimic physical machines:) For physical machines, a request crossing memory region boundary is allowed for several cases, such as 1) the memory hot plug case we have mentioned, 2) a request crossing NUMA node boundary, 3) even a request crossing physical memory and MMIO boundary is valid.\n> \n> I guess what I wanna ask is this: are there any downsides to having an interface (the GuestMemory trait) that is agnostic in terms of cross-region memory access, especially since users have full control over which implementation they choose?\n> \nHow about reimplementing the try_access() method for a specific GuestMemory implementation if the default implementation isn\u2019t desired? \nSeems that may solve the concern:)\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub <https://github.com/rust-vmm/vm-memory/pull/1#issuecomment-474916984>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AB14_Fe46mq7XuQ9BLSq0Eop6PzD_Fh7ks5vYmKcgaJpZM4bW6zr>.\n> \n\n", "updated_at": "2019-03-20T16:41:01Z", "url": "https://api.github.com/repos/rust-vmm/vm-memory/issues/comments/474921670", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/vm-memory/pull/1#issuecomment-474921670", "created_at": "2019-03-20T16:41:01Z", "id": 474921670, "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NDkyMTY3MA=="}, {"user": {"following_url": "https://api.github.com/users/bonzini/following{/other_user}", "url": "https://api.github.com/users/bonzini", "site_admin": false, "gists_url": "https://api.github.com/users/bonzini/gists{/gist_id}", "node_id": "MDQ6VXNlcjQyMDgy", "starred_url": "https://api.github.com/users/bonzini/starred{/owner}{/repo}", "gravatar_id": "", "id": 42082, "events_url": "https://api.github.com/users/bonzini/events{/privacy}", "avatar_url": "https://avatars2.githubusercontent.com/u/42082?v=4", "login": "bonzini", "repos_url": "https://api.github.com/users/bonzini/repos", "subscriptions_url": "https://api.github.com/users/bonzini/subscriptions", "followers_url": "https://api.github.com/users/bonzini/followers", "html_url": "https://github.com/bonzini", "received_events_url": "https://api.github.com/users/bonzini/received_events", "type": "User", "organizations_url": "https://api.github.com/users/bonzini/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/vm-memory/issues/1", "body": "> I guess what I wanna ask is this: are there any downsides to having an interface (the GuestMemory trait) that is agnostic in terms of cross-region memory access, especially since users have full control over which implementation they choose?\r\n\r\nThe advantage is in code reuse.", "updated_at": "2019-03-20T16:44:48Z", "url": "https://api.github.com/repos/rust-vmm/vm-memory/issues/comments/474923643", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/vm-memory/pull/1#issuecomment-474923643", "created_at": "2019-03-20T16:44:48Z", "id": 474923643, "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NDkyMzY0Mw=="}, {"user": {"following_url": "https://api.github.com/users/alexandruag/following{/other_user}", "url": "https://api.github.com/users/alexandruag", "site_admin": false, "gists_url": "https://api.github.com/users/alexandruag/gists{/gist_id}", "node_id": "MDQ6VXNlcjEwOTg5Nzg3", "starred_url": "https://api.github.com/users/alexandruag/starred{/owner}{/repo}", "gravatar_id": "", "id": 10989787, "events_url": "https://api.github.com/users/alexandruag/events{/privacy}", "avatar_url": "https://avatars1.githubusercontent.com/u/10989787?v=4", "login": "alexandruag", "repos_url": "https://api.github.com/users/alexandruag/repos", "subscriptions_url": "https://api.github.com/users/alexandruag/subscriptions", "followers_url": "https://api.github.com/users/alexandruag/followers", "html_url": "https://github.com/alexandruag", "received_events_url": "https://api.github.com/users/alexandruag/received_events", "type": "User", "organizations_url": "https://api.github.com/users/alexandruag/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/vm-memory/issues/1", "body": "> The advantage is in code reuse.\r\n\r\nIt doesn't look like the argument of code reuse is significant in this context. `try_access` is essentially a helper method. It brings convenience, but does not enrich the `GuestMemory` trait in terms of expressiveness (that is another reason why I consider it should not be a part of `GuestMemory` itself). If its code reuse value is high, we can do the following:\r\n- Alter the definition of `GuestMemory { ... }` to `GuestMemory: Bytes<GuestAddress> { ... }`.\r\n- Move `try_access` (and the implementations it enables) to another trait, say `pub trait PartiallyImplementedGuestMemory: GuestMemory`. Anyone willing to reuse the code can derive from the new trait.\r\n\r\nGetting back to the *to cross or not to cross thing* for a bit, I acknowledge the multitude of use-cases which require cross-region semantics, but please consider these points:\r\n\r\n- At the end of the day, the `GuestMemory` trait cannot enforce any particular semantics in this regard; an implementation is free to override any method, including `try_access`. This means users have to be mindful of the implementation anyway.\r\n\r\n- `GuestMemory` (or anything else for that matter) does not ascribe any precise meaning to `GuestMemoryRegion`. All regions might very well be the same for most implementations, but nothing stops others from differentiating between adjacent regions (among other things).\r\n\r\nTo sum it up, having something like `try_access` as part of `GuestMemory` feels wrong because not only are we conflating abstraction with implementation, but we're also doing it based on what I still consider to be an overgeneralization. Apologies for the long rant :D \r\n\r\n", "updated_at": "2019-03-20T18:39:13Z", "url": "https://api.github.com/repos/rust-vmm/vm-memory/issues/comments/474976656", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/vm-memory/pull/1#issuecomment-474976656", "created_at": "2019-03-20T18:39:13Z", "id": 474976656, "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NDk3NjY1Ng=="}, {"user": {"following_url": "https://api.github.com/users/alexandruag/following{/other_user}", "url": "https://api.github.com/users/alexandruag", "site_admin": false, "gists_url": "https://api.github.com/users/alexandruag/gists{/gist_id}", "node_id": "MDQ6VXNlcjEwOTg5Nzg3", "starred_url": "https://api.github.com/users/alexandruag/starred{/owner}{/repo}", "gravatar_id": "", "id": 10989787, "events_url": "https://api.github.com/users/alexandruag/events{/privacy}", "avatar_url": "https://avatars1.githubusercontent.com/u/10989787?v=4", "login": "alexandruag", "repos_url": "https://api.github.com/users/alexandruag/repos", "subscriptions_url": "https://api.github.com/users/alexandruag/subscriptions", "followers_url": "https://api.github.com/users/alexandruag/followers", "html_url": "https://github.com/alexandruag", "received_events_url": "https://api.github.com/users/alexandruag/received_events", "type": "User", "organizations_url": "https://api.github.com/users/alexandruag/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/vm-memory/issues/1", "body": "Hi again! Taking a step back, it seems there are a couple of ongoing discussions, and also some comments yet to be answered. Would it make sense to merge the stack of commits from this PR, so we can then proceed with the various conversation topics on multiple PRs/issues? (and I guess comments can be answered even when they're on a merged PR). How do you ppl think we should proceed?", "updated_at": "2019-03-22T09:59:58Z", "url": "https://api.github.com/repos/rust-vmm/vm-memory/issues/comments/475560118", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/vm-memory/pull/1#issuecomment-475560118", "created_at": "2019-03-22T09:59:58Z", "id": 475560118, "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NTU2MDExOA=="}, {"user": {"following_url": "https://api.github.com/users/sboeuf/following{/other_user}", "url": "https://api.github.com/users/sboeuf", "site_admin": false, "gists_url": "https://api.github.com/users/sboeuf/gists{/gist_id}", "node_id": "MDQ6VXNlcjIyODkwNDEz", "starred_url": "https://api.github.com/users/sboeuf/starred{/owner}{/repo}", "gravatar_id": "", "id": 22890413, "events_url": "https://api.github.com/users/sboeuf/events{/privacy}", "avatar_url": "https://avatars3.githubusercontent.com/u/22890413?v=4", "login": "sboeuf", "repos_url": "https://api.github.com/users/sboeuf/repos", "subscriptions_url": "https://api.github.com/users/sboeuf/subscriptions", "followers_url": "https://api.github.com/users/sboeuf/followers", "html_url": "https://github.com/sboeuf", "received_events_url": "https://api.github.com/users/sboeuf/received_events", "type": "User", "organizations_url": "https://api.github.com/users/sboeuf/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/vm-memory/issues/1", "body": "@alexandruag \r\n>Hi again! Taking a step back, it seems there are a couple of ongoing discussions, and also some comments yet to be answered. Would it make sense to merge the stack of commits from this PR, so we can then proceed with the various conversation topics on multiple PRs/issues? (and I guess comments can be answered even when they're on a merged PR). How do you ppl think we should proceed?\r\n\r\nIf nobody has any objection about the current code, thinking that it might break future add-on and expectation of the larger memory model, then we can definitely go ahead and merge this so that follow up PRs can happen.", "updated_at": "2019-03-22T15:42:35Z", "url": "https://api.github.com/repos/rust-vmm/vm-memory/issues/comments/475670430", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/vm-memory/pull/1#issuecomment-475670430", "created_at": "2019-03-22T15:42:35Z", "id": 475670430, "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NTY3MDQzMA=="}, {"user": {"following_url": "https://api.github.com/users/bonzini/following{/other_user}", "url": "https://api.github.com/users/bonzini", "site_admin": false, "gists_url": "https://api.github.com/users/bonzini/gists{/gist_id}", "node_id": "MDQ6VXNlcjQyMDgy", "starred_url": "https://api.github.com/users/bonzini/starred{/owner}{/repo}", "gravatar_id": "", "id": 42082, "events_url": "https://api.github.com/users/bonzini/events{/privacy}", "avatar_url": "https://avatars2.githubusercontent.com/u/42082?v=4", "login": "bonzini", "repos_url": "https://api.github.com/users/bonzini/repos", "subscriptions_url": "https://api.github.com/users/bonzini/subscriptions", "followers_url": "https://api.github.com/users/bonzini/followers", "html_url": "https://github.com/bonzini", "received_events_url": "https://api.github.com/users/bonzini/received_events", "type": "User", "organizations_url": "https://api.github.com/users/bonzini/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/vm-memory/issues/1", "body": "I am pushing the fixes for most of the reviews to my fork, and will channel it to @jiangliu via a pull request. Then we can approve and merge this.", "updated_at": "2019-03-22T22:39:10Z", "url": "https://api.github.com/repos/rust-vmm/vm-memory/issues/comments/475805379", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/vm-memory/pull/1#issuecomment-475805379", "created_at": "2019-03-22T22:39:10Z", "id": 475805379, "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NTgwNTM3OQ=="}, {"user": {"following_url": "https://api.github.com/users/bonzini/following{/other_user}", "url": "https://api.github.com/users/bonzini", "site_admin": false, "gists_url": "https://api.github.com/users/bonzini/gists{/gist_id}", "node_id": "MDQ6VXNlcjQyMDgy", "starred_url": "https://api.github.com/users/bonzini/starred{/owner}{/repo}", "gravatar_id": "", "id": 42082, "events_url": "https://api.github.com/users/bonzini/events{/privacy}", "avatar_url": "https://avatars2.githubusercontent.com/u/42082?v=4", "login": "bonzini", "repos_url": "https://api.github.com/users/bonzini/repos", "subscriptions_url": "https://api.github.com/users/bonzini/subscriptions", "followers_url": "https://api.github.com/users/bonzini/followers", "html_url": "https://github.com/bonzini", "received_events_url": "https://api.github.com/users/bonzini/received_events", "type": "User", "organizations_url": "https://api.github.com/users/bonzini/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/vm-memory/issues/1", "body": "> At the end of the day, the GuestMemory trait cannot enforce any particular semantics in this regard; an implementation is free to override any method, including try_access. This means users have to be mindful of the implementation anyway.\r\n\r\nIt doesn't, but then you can also implement `Add` so that it subtracts... It would just be a bug.\r\n\r\nThe case of differentiating between adjacent regions should be handled by `try_access` as well. If an implementation wants to differentiating between adjacent regions and finds `try_access` to lack in this respect, they should fix vm_memory instead of overriding it or worse vendoring it.", "updated_at": "2019-03-22T22:41:18Z", "url": "https://api.github.com/repos/rust-vmm/vm-memory/issues/comments/475805769", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/vm-memory/pull/1#issuecomment-475805769", "created_at": "2019-03-22T22:41:18Z", "id": 475805769, "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NTgwNTc2OQ=="}, {"user": {"following_url": "https://api.github.com/users/jiangliu/following{/other_user}", "url": "https://api.github.com/users/jiangliu", "site_admin": false, "gists_url": "https://api.github.com/users/jiangliu/gists{/gist_id}", "node_id": "MDQ6VXNlcjE5MzE1MTY=", "starred_url": "https://api.github.com/users/jiangliu/starred{/owner}{/repo}", "gravatar_id": "", "id": 1931516, "events_url": "https://api.github.com/users/jiangliu/events{/privacy}", "avatar_url": "https://avatars0.githubusercontent.com/u/1931516?v=4", "login": "jiangliu", "repos_url": "https://api.github.com/users/jiangliu/repos", "subscriptions_url": "https://api.github.com/users/jiangliu/subscriptions", "followers_url": "https://api.github.com/users/jiangliu/followers", "html_url": "https://github.com/jiangliu", "received_events_url": "https://api.github.com/users/jiangliu/received_events", "type": "User", "organizations_url": "https://api.github.com/users/jiangliu/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/vm-memory/issues/1", "body": "Hi sameo,\n\tI have merged Paolo\u2019s new patch set and clean up the commit history a bit.\nAnd just send it to Paolo for review yesterday. So send out a new PR today after addressing a suggestion from Paolo.\nThanks!\n\n> On Mar 26, 2019, at 8:37 AM, Samuel Ortiz <notifications@github.com> wrote:\n> \n> @sameo approved this pull request.\n> \n> @jiangliu <https://github.com/jiangliu> Could you please rebase this PR?\n> Although there are some pending comments, I think we should go ahead and merge it and start addressing those comments through follow up PRs.\n> \n> LGTM\n> \n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub <https://github.com/rust-vmm/vm-memory/pull/1#pullrequestreview-218647963>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AB14_JlE1gDeneSe6j2IbHKdGwVPZIjjks5vaWu7gaJpZM4bW6zr>.\n> \n\n", "updated_at": "2019-03-26T00:59:28Z", "url": "https://api.github.com/repos/rust-vmm/vm-memory/issues/comments/476433227", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/vm-memory/pull/1#issuecomment-476433227", "created_at": "2019-03-26T00:59:28Z", "id": 476433227, "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NjQzMzIyNw=="}, {"user": {"following_url": "https://api.github.com/users/jiangliu/following{/other_user}", "url": "https://api.github.com/users/jiangliu", "site_admin": false, "gists_url": "https://api.github.com/users/jiangliu/gists{/gist_id}", "node_id": "MDQ6VXNlcjE5MzE1MTY=", "starred_url": "https://api.github.com/users/jiangliu/starred{/owner}{/repo}", "gravatar_id": "", "id": 1931516, "events_url": "https://api.github.com/users/jiangliu/events{/privacy}", "avatar_url": "https://avatars0.githubusercontent.com/u/1931516?v=4", "login": "jiangliu", "repos_url": "https://api.github.com/users/jiangliu/repos", "subscriptions_url": "https://api.github.com/users/jiangliu/subscriptions", "followers_url": "https://api.github.com/users/jiangliu/followers", "html_url": "https://github.com/jiangliu", "received_events_url": "https://api.github.com/users/jiangliu/received_events", "type": "User", "organizations_url": "https://api.github.com/users/jiangliu/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/vm-memory/issues/1", "body": "Hi all,\r\n        Thank you all for reviewing the PR. With patches to address the review comments, the commit history became a little messy. So I clean up the patch series by folding those trivial patches into other commits, the result patch set becomes much more cleaner.  A new PR is created to ease reviewing and merging. This PR will be closed once the new PR gets merged.\r\n        Please refer to https://github.com/rust-vmm/vm-memory/pull/4 for the new PR.", "updated_at": "2019-03-26T04:49:33Z", "url": "https://api.github.com/repos/rust-vmm/vm-memory/issues/comments/476474355", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/vm-memory/pull/1#issuecomment-476474355", "created_at": "2019-03-26T04:48:56Z", "id": 476474355, "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NjQ3NDM1NQ=="}, {"user": {"following_url": "https://api.github.com/users/sameo/following{/other_user}", "url": "https://api.github.com/users/sameo", "site_admin": false, "gists_url": "https://api.github.com/users/sameo/gists{/gist_id}", "node_id": "MDQ6VXNlcjEwNDM4NjM=", "starred_url": "https://api.github.com/users/sameo/starred{/owner}{/repo}", "gravatar_id": "", "id": 1043863, "events_url": "https://api.github.com/users/sameo/events{/privacy}", "avatar_url": "https://avatars2.githubusercontent.com/u/1043863?v=4", "login": "sameo", "repos_url": "https://api.github.com/users/sameo/repos", "subscriptions_url": "https://api.github.com/users/sameo/subscriptions", "followers_url": "https://api.github.com/users/sameo/followers", "html_url": "https://github.com/sameo", "received_events_url": "https://api.github.com/users/sameo/received_events", "type": "User", "organizations_url": "https://api.github.com/users/sameo/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/vm-memory/issues/1", "body": "> Hi all,\r\n> Thank you all for reviewing the PR. With patches to address the review comments, the commit history became a little messy. So I clean up the patch series by folding those trivial patches into other commits, the result patch set becomes much more cleaner. A new PR is created to ease reviewing and merging. This PR will be closed once the new PR gets merged.\r\n> Please refer to #4 for the new PR.\r\n\r\nHi @jiangliu \r\nI personally prefer to keep it within the same PR, so that the complete history lives in the same PR thread. IMO it's ok to squash commits and force push into that PR. If people really want to look at the PR history, they can inspect your branch.\r\nI'd suggest to do so (squash and force push) in that PR and make it exactly like PR #4, unless someone (@andreeaflorescu @bonzini @alexandruag @sboeuf ?) disagrees...", "updated_at": "2019-03-26T10:28:33Z", "url": "https://api.github.com/repos/rust-vmm/vm-memory/issues/comments/476563523", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/vm-memory/pull/1#issuecomment-476563523", "created_at": "2019-03-26T10:28:33Z", "id": 476563523, "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NjU2MzUyMw=="}, {"user": {"following_url": "https://api.github.com/users/jiangliu/following{/other_user}", "url": "https://api.github.com/users/jiangliu", "site_admin": false, "gists_url": "https://api.github.com/users/jiangliu/gists{/gist_id}", "node_id": "MDQ6VXNlcjE5MzE1MTY=", "starred_url": "https://api.github.com/users/jiangliu/starred{/owner}{/repo}", "gravatar_id": "", "id": 1931516, "events_url": "https://api.github.com/users/jiangliu/events{/privacy}", "avatar_url": "https://avatars0.githubusercontent.com/u/1931516?v=4", "login": "jiangliu", "repos_url": "https://api.github.com/users/jiangliu/repos", "subscriptions_url": "https://api.github.com/users/jiangliu/subscriptions", "followers_url": "https://api.github.com/users/jiangliu/followers", "html_url": "https://github.com/jiangliu", "received_events_url": "https://api.github.com/users/jiangliu/received_events", "type": "User", "organizations_url": "https://api.github.com/users/jiangliu/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/vm-memory/issues/1", "body": "Sure, I will force push to the PR and close PR #4.\n\n> On Mar 26, 2019, at 6:28 PM, Samuel Ortiz <notifications@github.com <mailto:notifications@github.com>> wrote:\n> \n> Hi all,\n> Thank you all for reviewing the PR. With patches to address the review comments, the commit history became a little messy. So I clean up the patch series by folding those trivial patches into other commits, the result patch set becomes much more cleaner. A new PR is created to ease reviewing and merging. This PR will be closed once the new PR gets merged.\n> Please refer to #4 <https://github.com/rust-vmm/vm-memory/pull/4> for the new PR.\n> \n> Hi @jiangliu <https://github.com/jiangliu>\n> I personally prefer to keep it within the same PR, so that the complete history lives in the same PR thread. IMO it's ok to squash commits and force push into that PR. If people really want to look at the PR history, they can inspect your branch.\n> I'd suggest to do so (squash and force push) in that PR and make it exactly like PR #4 <https://github.com/rust-vmm/vm-memory/pull/4>, unless someone (@andreeaflorescu <https://github.com/andreeaflorescu> @bonzini <https://github.com/bonzini> @alexandruag <https://github.com/alexandruag> @sboeuf <https://github.com/sboeuf> ?) disagrees...\n> \n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub <https://github.com/rust-vmm/vm-memory/pull/1#issuecomment-476563523>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AB14_BL6ZPOzwIaQDR_1xvcPW3AHkmIPks5vafZRgaJpZM4bW6zr>.\n> \n\n", "updated_at": "2019-03-26T10:44:33Z", "url": "https://api.github.com/repos/rust-vmm/vm-memory/issues/comments/476569996", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/vm-memory/pull/1#issuecomment-476569996", "created_at": "2019-03-26T10:44:33Z", "id": 476569996, "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NjU2OTk5Ng=="}, {"user": {"following_url": "https://api.github.com/users/bonzini/following{/other_user}", "url": "https://api.github.com/users/bonzini", "site_admin": false, "gists_url": "https://api.github.com/users/bonzini/gists{/gist_id}", "node_id": "MDQ6VXNlcjQyMDgy", "starred_url": "https://api.github.com/users/bonzini/starred{/owner}{/repo}", "gravatar_id": "", "id": 42082, "events_url": "https://api.github.com/users/bonzini/events{/privacy}", "avatar_url": "https://avatars2.githubusercontent.com/u/42082?v=4", "login": "bonzini", "repos_url": "https://api.github.com/users/bonzini/repos", "subscriptions_url": "https://api.github.com/users/bonzini/subscriptions", "followers_url": "https://api.github.com/users/bonzini/followers", "html_url": "https://github.com/bonzini", "received_events_url": "https://api.github.com/users/bonzini/received_events", "type": "User", "organizations_url": "https://api.github.com/users/bonzini/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/vm-memory/issues/1", "body": "@jiangliu I think there was a little misunderstanding about GuestUsize; it's `GuestAddressValue` that should be renamed instead. Can you squash in my commit [eaee4937](https://github.com/jiangliu/vm-memory/pull/2/commits/eaee4937eccd18cf365a7883eb4bbe59442a2511)?\r\n\r\nI also fixed some of the volatile issues.", "updated_at": "2019-03-26T13:20:06Z", "url": "https://api.github.com/repos/rust-vmm/vm-memory/issues/comments/476589332", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/vm-memory/pull/1#issuecomment-476589332", "created_at": "2019-03-26T11:41:48Z", "id": 476589332, "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NjU4OTMzMg=="}, {"user": {"following_url": "https://api.github.com/users/sboeuf/following{/other_user}", "url": "https://api.github.com/users/sboeuf", "site_admin": false, "gists_url": "https://api.github.com/users/sboeuf/gists{/gist_id}", "node_id": "MDQ6VXNlcjIyODkwNDEz", "starred_url": "https://api.github.com/users/sboeuf/starred{/owner}{/repo}", "gravatar_id": "", "id": 22890413, "events_url": "https://api.github.com/users/sboeuf/events{/privacy}", "avatar_url": "https://avatars3.githubusercontent.com/u/22890413?v=4", "login": "sboeuf", "repos_url": "https://api.github.com/users/sboeuf/repos", "subscriptions_url": "https://api.github.com/users/sboeuf/subscriptions", "followers_url": "https://api.github.com/users/sboeuf/followers", "html_url": "https://github.com/sboeuf", "received_events_url": "https://api.github.com/users/sboeuf/received_events", "type": "User", "organizations_url": "https://api.github.com/users/sboeuf/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/vm-memory/issues/1", "body": "LGTM", "updated_at": "2019-03-26T14:28:32Z", "url": "https://api.github.com/repos/rust-vmm/vm-memory/issues/comments/476671683", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/vm-memory/pull/1#issuecomment-476671683", "created_at": "2019-03-26T14:28:32Z", "id": 476671683, "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NjY3MTY4Mw=="}]