[{"user": {"following_url": "https://api.github.com/users/acatangiu/following{/other_user}", "url": "https://api.github.com/users/acatangiu", "site_admin": false, "gists_url": "https://api.github.com/users/acatangiu/gists{/gist_id}", "node_id": "MDQ6VXNlcjMxOTE3OTcz", "starred_url": "https://api.github.com/users/acatangiu/starred{/owner}{/repo}", "gravatar_id": "", "id": 31917973, "events_url": "https://api.github.com/users/acatangiu/events{/privacy}", "avatar_url": "https://avatars3.githubusercontent.com/u/31917973?v=4", "login": "acatangiu", "repos_url": "https://api.github.com/users/acatangiu/repos", "subscriptions_url": "https://api.github.com/users/acatangiu/subscriptions", "followers_url": "https://api.github.com/users/acatangiu/followers", "html_url": "https://github.com/acatangiu", "received_events_url": "https://api.github.com/users/acatangiu/received_events", "type": "User", "organizations_url": "https://api.github.com/users/acatangiu/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/vmm-sys-util/issues/53", "body": "@crate-code-owners, is there a reason why signal registration is differentiated between `vcpu`-threads and non-`vcpu`-threads?\r\n\r\nWhy are `vcpu` signal numbers off-setted under the hood to land in the `SIGRTMIN` and `SIGRTMAX` range.\r\n\r\nI'd like this interface to expose a clean design with no unnecessary under-the-hood magic. Users of the crate should have full control over which signals are being actually used.", "updated_at": "2019-11-18T15:30:04Z", "url": "https://api.github.com/repos/rust-vmm/vmm-sys-util/issues/comments/555066447", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/vmm-sys-util/issues/53#issuecomment-555066447", "created_at": "2019-11-18T15:29:39Z", "id": 555066447, "node_id": "MDEyOklzc3VlQ29tbWVudDU1NTA2NjQ0Nw=="}, {"user": {"following_url": "https://api.github.com/users/andreeaflorescu/following{/other_user}", "url": "https://api.github.com/users/andreeaflorescu", "site_admin": false, "gists_url": "https://api.github.com/users/andreeaflorescu/gists{/gist_id}", "node_id": "MDQ6VXNlcjI4MTU5NDQ=", "starred_url": "https://api.github.com/users/andreeaflorescu/starred{/owner}{/repo}", "gravatar_id": "", "id": 2815944, "events_url": "https://api.github.com/users/andreeaflorescu/events{/privacy}", "avatar_url": "https://avatars0.githubusercontent.com/u/2815944?v=4", "login": "andreeaflorescu", "repos_url": "https://api.github.com/users/andreeaflorescu/repos", "subscriptions_url": "https://api.github.com/users/andreeaflorescu/subscriptions", "followers_url": "https://api.github.com/users/andreeaflorescu/followers", "html_url": "https://github.com/andreeaflorescu", "received_events_url": "https://api.github.com/users/andreeaflorescu/received_events", "type": "User", "organizations_url": "https://api.github.com/users/andreeaflorescu/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/vmm-sys-util/issues/53", "body": "The reason is probably because that's how we have it in Firecracker. In Firecracker we use \"vcpu\" instead of \"real time\" as well. This should be fixed.\r\n\r\nNow, talking about the fix, most of the times having a boolean as a parameter is not a good sign. It means that your function is not doing one thing and one thing only. So instead of changing `for_vcpu` to `is_rtsig` how about we have two functions instead:\r\n- register_signal_handler\r\n- register_rt_signal_handler. This function would have an extra check that the signal is indeed realtime and then just call into `register_signal_handler`.\r\n\r\nCC: @sameo \r\n\r\n", "updated_at": "2019-11-18T15:37:17Z", "url": "https://api.github.com/repos/rust-vmm/vmm-sys-util/issues/comments/555069996", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/vmm-sys-util/issues/53#issuecomment-555069996", "created_at": "2019-11-18T15:37:17Z", "id": 555069996, "node_id": "MDEyOklzc3VlQ29tbWVudDU1NTA2OTk5Ng=="}, {"user": {"following_url": "https://api.github.com/users/aghecenco/following{/other_user}", "url": "https://api.github.com/users/aghecenco", "site_admin": false, "gists_url": "https://api.github.com/users/aghecenco/gists{/gist_id}", "node_id": "MDQ6VXNlcjIwMzU4Mjk=", "starred_url": "https://api.github.com/users/aghecenco/starred{/owner}{/repo}", "gravatar_id": "", "id": 2035829, "events_url": "https://api.github.com/users/aghecenco/events{/privacy}", "avatar_url": "https://avatars2.githubusercontent.com/u/2035829?v=4", "login": "aghecenco", "repos_url": "https://api.github.com/users/aghecenco/repos", "subscriptions_url": "https://api.github.com/users/aghecenco/subscriptions", "followers_url": "https://api.github.com/users/aghecenco/followers", "html_url": "https://github.com/aghecenco", "received_events_url": "https://api.github.com/users/aghecenco/received_events", "type": "User", "organizations_url": "https://api.github.com/users/aghecenco/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/vmm-sys-util/issues/53", "body": "> The reason is probably because that's how we have it in Firecracker. In Firecracker we use \"vcpu\" instead of \"real time\" as well. This should be fixed.\r\n\r\nTrue. Firecracker differentiates between signals that make sense to vCPU threads (`SIGRTMIN` to `SIGRTMAX`) and signals that make sense to the process (e.g. `SIGSYS`, `SIGSEGV` etc).\r\nWe used to have a single `register` function and did the validation *for vcpu* vs *for process* \"behind the scenes\". That changed in https://github.com/firecracker-microvm/firecracker/commit/6fd470ddd072113cff56cbe93e8593eafa0afdf3 when we decided against exposing a unified API that does 2 different things.\r\n\r\n> Now, talking about the fix, most of the times having a boolean as a parameter is not a good sign. It means that your function is not doing one thing and one thing only. So instead of changing `for_vcpu` to `is_rtsig` how about we have two functions instead:\r\n> \r\n>     * register_signal_handler\r\n> \r\n>     * register_rt_signal_handler. This function would have an extra check that the signal is indeed realtime and then just call into `register_signal_handler`.\r\n> \r\n\r\nMakes sense to me, with the addendum that as a new contributor I'd have no idea why realtime signals are specials. We should make it obvious that realtime signals are for the vCPU threads.", "updated_at": "2019-11-18T15:42:31Z", "url": "https://api.github.com/repos/rust-vmm/vmm-sys-util/issues/comments/555072226", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/vmm-sys-util/issues/53#issuecomment-555072226", "created_at": "2019-11-18T15:42:05Z", "id": 555072226, "node_id": "MDEyOklzc3VlQ29tbWVudDU1NTA3MjIyNg=="}, {"user": {"following_url": "https://api.github.com/users/acatangiu/following{/other_user}", "url": "https://api.github.com/users/acatangiu", "site_admin": false, "gists_url": "https://api.github.com/users/acatangiu/gists{/gist_id}", "node_id": "MDQ6VXNlcjMxOTE3OTcz", "starred_url": "https://api.github.com/users/acatangiu/starred{/owner}{/repo}", "gravatar_id": "", "id": 31917973, "events_url": "https://api.github.com/users/acatangiu/events{/privacy}", "avatar_url": "https://avatars3.githubusercontent.com/u/31917973?v=4", "login": "acatangiu", "repos_url": "https://api.github.com/users/acatangiu/repos", "subscriptions_url": "https://api.github.com/users/acatangiu/subscriptions", "followers_url": "https://api.github.com/users/acatangiu/followers", "html_url": "https://github.com/acatangiu", "received_events_url": "https://api.github.com/users/acatangiu/received_events", "type": "User", "organizations_url": "https://api.github.com/users/acatangiu/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/vmm-sys-util/issues/53", "body": "> We should make it obvious that realtime signals are for the vCPU threads.\r\n\r\nBut why should we impose/force that design?\r\n\r\nSignal handlers are at the full process level. There is no way to register a specific handler on a specific thread (only signal delivery can be done per-thread).\r\nI would just keep a single `register_signal_handler` function and the user can build any system he wants.\r\n\r\nCC @dgreid @zachreizner \r\n", "updated_at": "2019-11-18T15:51:33Z", "url": "https://api.github.com/repos/rust-vmm/vmm-sys-util/issues/comments/555076400", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/vmm-sys-util/issues/53#issuecomment-555076400", "created_at": "2019-11-18T15:50:34Z", "id": 555076400, "node_id": "MDEyOklzc3VlQ29tbWVudDU1NTA3NjQwMA=="}, {"user": {"following_url": "https://api.github.com/users/aghecenco/following{/other_user}", "url": "https://api.github.com/users/aghecenco", "site_admin": false, "gists_url": "https://api.github.com/users/aghecenco/gists{/gist_id}", "node_id": "MDQ6VXNlcjIwMzU4Mjk=", "starred_url": "https://api.github.com/users/aghecenco/starred{/owner}{/repo}", "gravatar_id": "", "id": 2035829, "events_url": "https://api.github.com/users/aghecenco/events{/privacy}", "avatar_url": "https://avatars2.githubusercontent.com/u/2035829?v=4", "login": "aghecenco", "repos_url": "https://api.github.com/users/aghecenco/repos", "subscriptions_url": "https://api.github.com/users/aghecenco/subscriptions", "followers_url": "https://api.github.com/users/aghecenco/followers", "html_url": "https://github.com/aghecenco", "received_events_url": "https://api.github.com/users/aghecenco/received_events", "type": "User", "organizations_url": "https://api.github.com/users/aghecenco/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/vmm-sys-util/issues/53", "body": "I think the original idea was to make it easy to kick the vcpu out of its run loop so that the kicker doesn't need to do the awkward math of `thread.kill(SIGRTMIN + delta)`. Either the kicker or the signal handler need to do that math, so `SIGRTMIN + something` is bound to end up somewhere. I don't feel strongly about either option of placing them. I nonetheless stick to the idea of informing via comments that RT signals have something to do with vcpus.", "updated_at": "2019-11-18T16:27:33Z", "url": "https://api.github.com/repos/rust-vmm/vmm-sys-util/issues/comments/555094321", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/vmm-sys-util/issues/53#issuecomment-555094321", "created_at": "2019-11-18T16:27:33Z", "id": 555094321, "node_id": "MDEyOklzc3VlQ29tbWVudDU1NTA5NDMyMQ=="}]