[{"user": {"following_url": "https://api.github.com/users/bonzini/following{/other_user}", "url": "https://api.github.com/users/bonzini", "site_admin": false, "gists_url": "https://api.github.com/users/bonzini/gists{/gist_id}", "node_id": "MDQ6VXNlcjQyMDgy", "starred_url": "https://api.github.com/users/bonzini/starred{/owner}{/repo}", "gravatar_id": "", "id": 42082, "events_url": "https://api.github.com/users/bonzini/events{/privacy}", "avatar_url": "https://avatars2.githubusercontent.com/u/42082?v=4", "login": "bonzini", "repos_url": "https://api.github.com/users/bonzini/repos", "subscriptions_url": "https://api.github.com/users/bonzini/subscriptions", "followers_url": "https://api.github.com/users/bonzini/followers", "html_url": "https://github.com/bonzini", "received_events_url": "https://api.github.com/users/bonzini/received_events", "type": "User", "organizations_url": "https://api.github.com/users/bonzini/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/community/issues/27", "body": "The initial proposed code is at https://github.com/bonzini/memory-model/tree/volatile-memory", "updated_at": "2019-02-26T15:05:06Z", "url": "https://api.github.com/repos/rust-vmm/community/issues/comments/467398002", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/community/issues/27#issuecomment-467398002", "created_at": "2019-02-26T11:10:49Z", "id": 467398002, "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzM5ODAwMg=="}, {"user": {"following_url": "https://api.github.com/users/jiangliu/following{/other_user}", "url": "https://api.github.com/users/jiangliu", "site_admin": false, "gists_url": "https://api.github.com/users/jiangliu/gists{/gist_id}", "node_id": "MDQ6VXNlcjE5MzE1MTY=", "starred_url": "https://api.github.com/users/jiangliu/starred{/owner}{/repo}", "gravatar_id": "", "id": 1931516, "events_url": "https://api.github.com/users/jiangliu/events{/privacy}", "avatar_url": "https://avatars0.githubusercontent.com/u/1931516?v=4", "login": "jiangliu", "repos_url": "https://api.github.com/users/jiangliu/repos", "subscriptions_url": "https://api.github.com/users/jiangliu/subscriptions", "followers_url": "https://api.github.com/users/jiangliu/followers", "html_url": "https://github.com/jiangliu", "received_events_url": "https://api.github.com/users/jiangliu/received_events", "type": "User", "organizations_url": "https://api.github.com/users/jiangliu/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/community/issues/27", "body": "+1\r\nI would be helpful to extract out these common memory access traits.", "updated_at": "2019-02-26T11:22:32Z", "url": "https://api.github.com/repos/rust-vmm/community/issues/comments/467401265", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/community/issues/27#issuecomment-467401265", "created_at": "2019-02-26T11:22:32Z", "id": 467401265, "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzQwMTI2NQ=="}, {"user": {"following_url": "https://api.github.com/users/jiangliu/following{/other_user}", "url": "https://api.github.com/users/jiangliu", "site_admin": false, "gists_url": "https://api.github.com/users/jiangliu/gists{/gist_id}", "node_id": "MDQ6VXNlcjE5MzE1MTY=", "starred_url": "https://api.github.com/users/jiangliu/starred{/owner}{/repo}", "gravatar_id": "", "id": 1931516, "events_url": "https://api.github.com/users/jiangliu/events{/privacy}", "avatar_url": "https://avatars0.githubusercontent.com/u/1931516?v=4", "login": "jiangliu", "repos_url": "https://api.github.com/users/jiangliu/repos", "subscriptions_url": "https://api.github.com/users/jiangliu/subscriptions", "followers_url": "https://api.github.com/users/jiangliu/followers", "html_url": "https://github.com/jiangliu", "received_events_url": "https://api.github.com/users/jiangliu/received_events", "type": "User", "organizations_url": "https://api.github.com/users/jiangliu/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/community/issues/27", "body": "Seems data_init.rs is missing from https://github.com/bonzini/memory-model/tree/v2", "updated_at": "2019-02-26T16:37:30Z", "url": "https://api.github.com/repos/rust-vmm/community/issues/comments/467513059", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/community/issues/27#issuecomment-467513059", "created_at": "2019-02-26T16:37:30Z", "id": 467513059, "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzUxMzA1OQ=="}, {"user": {"following_url": "https://api.github.com/users/bonzini/following{/other_user}", "url": "https://api.github.com/users/bonzini", "site_admin": false, "gists_url": "https://api.github.com/users/bonzini/gists{/gist_id}", "node_id": "MDQ6VXNlcjQyMDgy", "starred_url": "https://api.github.com/users/bonzini/starred{/owner}{/repo}", "gravatar_id": "", "id": 42082, "events_url": "https://api.github.com/users/bonzini/events{/privacy}", "avatar_url": "https://avatars2.githubusercontent.com/u/42082?v=4", "login": "bonzini", "repos_url": "https://api.github.com/users/bonzini/repos", "subscriptions_url": "https://api.github.com/users/bonzini/subscriptions", "followers_url": "https://api.github.com/users/bonzini/followers", "html_url": "https://github.com/bonzini", "received_events_url": "https://api.github.com/users/bonzini/received_events", "type": "User", "organizations_url": "https://api.github.com/users/bonzini/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/community/issues/27", "body": "Nope, this won't work due to\r\n\r\n    impl<T: GuestMemory> Bytes<GuestAddress> for T {\r\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type parameter `T` must be used as the type parameter for some local type\r\n\r\n:(", "updated_at": "2019-02-26T17:57:20Z", "url": "https://api.github.com/repos/rust-vmm/community/issues/comments/467544614", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/community/issues/27#issuecomment-467544614", "created_at": "2019-02-26T17:57:20Z", "id": 467544614, "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzU0NDYxNA=="}, {"user": {"following_url": "https://api.github.com/users/dagrh/following{/other_user}", "url": "https://api.github.com/users/dagrh", "site_admin": false, "gists_url": "https://api.github.com/users/dagrh/gists{/gist_id}", "node_id": "MDQ6VXNlcjYzMjk3NjA=", "starred_url": "https://api.github.com/users/dagrh/starred{/owner}{/repo}", "gravatar_id": "", "id": 6329760, "events_url": "https://api.github.com/users/dagrh/events{/privacy}", "avatar_url": "https://avatars1.githubusercontent.com/u/6329760?v=4", "login": "dagrh", "repos_url": "https://api.github.com/users/dagrh/repos", "subscriptions_url": "https://api.github.com/users/dagrh/subscriptions", "followers_url": "https://api.github.com/users/dagrh/followers", "html_url": "https://github.com/dagrh", "received_events_url": "https://api.github.com/users/dagrh/received_events", "type": "User", "organizations_url": "https://api.github.com/users/dagrh/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/community/issues/27", "body": "Why have Address and AddressValue got different subsets of Ord/PartialOrd - I suspect if you've got Ord you don't need PartialOrd; also PartialOrd says it r\r\nequiers PartialEq; similarly why has AddressValue got Add/Sub but Address hasn't?\r\n\r\nin volatile_memory I wonder whether the region_end checks work where offset+count=2^64 - it feels in most of the uses we want them to, but it feels like reg\r\nion_end will overflow?\r\n\r\n425: Write a slice at offset 256 - looks like it's writing it at 1020 - and purposely hitting the end? (and the read below it)- looks like a few of those have been copied/pasted and then the example changed.", "updated_at": "2019-02-26T18:13:39Z", "url": "https://api.github.com/repos/rust-vmm/community/issues/comments/467550500", "author_association": "NONE", "html_url": "https://github.com/rust-vmm/community/issues/27#issuecomment-467550500", "created_at": "2019-02-26T18:13:39Z", "id": 467550500, "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzU1MDUwMA=="}, {"user": {"following_url": "https://api.github.com/users/jiangliu/following{/other_user}", "url": "https://api.github.com/users/jiangliu", "site_admin": false, "gists_url": "https://api.github.com/users/jiangliu/gists{/gist_id}", "node_id": "MDQ6VXNlcjE5MzE1MTY=", "starred_url": "https://api.github.com/users/jiangliu/starred{/owner}{/repo}", "gravatar_id": "", "id": 1931516, "events_url": "https://api.github.com/users/jiangliu/events{/privacy}", "avatar_url": "https://avatars0.githubusercontent.com/u/1931516?v=4", "login": "jiangliu", "repos_url": "https://api.github.com/users/jiangliu/repos", "subscriptions_url": "https://api.github.com/users/jiangliu/subscriptions", "followers_url": "https://api.github.com/users/jiangliu/followers", "html_url": "https://github.com/jiangliu", "received_events_url": "https://api.github.com/users/jiangliu/received_events", "type": "User", "organizations_url": "https://api.github.com/users/jiangliu/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/community/issues/27", "body": "\n\n> On Feb 27, 2019, at 2:13 AM, Dr. David Alan Gilbert <notifications@github.com <mailto:notifications@github.com>> wrote:\n> \n> Why have Address and AddressValue got different subsets of Ord/PartialOrd - I suspect if you've got Ord you don't need PartialOrd; also PartialOrd says it r\n> equiers PartialEq; similarly why has AddressValue got Add/Sub but Address hasn't?\n> \nGood point, needs to clean up the super traits.\nFor Add/Sub, it\u2019s due to that we need to use +/- operators on AddressValue but doesn\u2019t support +/- operators on Address.\nCurrent design of Address trait is:\n1) does not support operators\n2) with an exception of the special cases: Address BitAnd/BitOr Address::Value\n> in volatile_memory I wonder whether the region_end checks work where offset+count=2^64 - it feels in most of the uses we want them to, but it feels like reg\n> ion_end will overflow?\n> \nCareful audit is needed about overflowing cases once we reach agreements about the interface design.\n\n> 425: Write a slice at offset 256 - looks like it's writing it at 1020 - and purposely hitting the end? (and the read below it)- looks like a few of those have been copied/pasted and then the example changed.\n> \nMost code are copied&pasted from crosvm and firecracker with minor modifications, so I will try to clean up it.\n\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub <https://github.com/rust-vmm/community/issues/27#issuecomment-467550500>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AB14_EZj6PJ0qunl1S-AS-BONuuz_kUVks5vRXlUgaJpZM4bR7UH>.\n> \n\n", "updated_at": "2019-02-27T07:34:41Z", "url": "https://api.github.com/repos/rust-vmm/community/issues/comments/467755514", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/community/issues/27#issuecomment-467755514", "created_at": "2019-02-27T07:34:41Z", "id": 467755514, "node_id": "MDEyOklzc3VlQ29tbWVudDQ2Nzc1NTUxNA=="}]