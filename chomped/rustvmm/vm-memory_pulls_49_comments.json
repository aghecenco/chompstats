[{"user": {"following_url": "https://api.github.com/users/jiangliu/following{/other_user}", "url": "https://api.github.com/users/jiangliu", "site_admin": false, "gists_url": "https://api.github.com/users/jiangliu/gists{/gist_id}", "node_id": "MDQ6VXNlcjE5MzE1MTY=", "starred_url": "https://api.github.com/users/jiangliu/starred{/owner}{/repo}", "gravatar_id": "", "id": 1931516, "events_url": "https://api.github.com/users/jiangliu/events{/privacy}", "avatar_url": "https://avatars0.githubusercontent.com/u/1931516?v=4", "login": "jiangliu", "repos_url": "https://api.github.com/users/jiangliu/repos", "subscriptions_url": "https://api.github.com/users/jiangliu/subscriptions", "followers_url": "https://api.github.com/users/jiangliu/followers", "html_url": "https://github.com/jiangliu", "received_events_url": "https://api.github.com/users/jiangliu/received_events", "type": "User", "organizations_url": "https://api.github.com/users/jiangliu/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/vm-memory/issues/49", "body": "I still have a question here. For most cases, we should have one or two memory ranges in an GuestMemory object, and the original search algorithm should be good enough. So what scenarios will have a relative more ranges in an GuestMemory object?", "updated_at": "2019-11-16T08:38:15Z", "url": "https://api.github.com/repos/rust-vmm/vm-memory/issues/comments/554617294", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/vm-memory/pull/49#issuecomment-554617294", "created_at": "2019-11-16T08:38:15Z", "id": 554617294, "node_id": "MDEyOklzc3VlQ29tbWVudDU1NDYxNzI5NA=="}, {"user": {"following_url": "https://api.github.com/users/jiangliu/following{/other_user}", "url": "https://api.github.com/users/jiangliu", "site_admin": false, "gists_url": "https://api.github.com/users/jiangliu/gists{/gist_id}", "node_id": "MDQ6VXNlcjE5MzE1MTY=", "starred_url": "https://api.github.com/users/jiangliu/starred{/owner}{/repo}", "gravatar_id": "", "id": 1931516, "events_url": "https://api.github.com/users/jiangliu/events{/privacy}", "avatar_url": "https://avatars0.githubusercontent.com/u/1931516?v=4", "login": "jiangliu", "repos_url": "https://api.github.com/users/jiangliu/repos", "subscriptions_url": "https://api.github.com/users/jiangliu/subscriptions", "followers_url": "https://api.github.com/users/jiangliu/followers", "html_url": "https://github.com/jiangliu", "received_events_url": "https://api.github.com/users/jiangliu/received_events", "type": "User", "organizations_url": "https://api.github.com/users/jiangliu/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/vm-memory/issues/49", "body": "Or any performance comparison with the previous linear search algorithm? Does it achieve good performance with 1-2 memory ranges only? ", "updated_at": "2019-11-17T02:58:55Z", "url": "https://api.github.com/repos/rust-vmm/vm-memory/issues/comments/554697843", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/vm-memory/pull/49#issuecomment-554697843", "created_at": "2019-11-17T02:58:55Z", "id": 554697843, "node_id": "MDEyOklzc3VlQ29tbWVudDU1NDY5Nzg0Mw=="}, {"user": {"following_url": "https://api.github.com/users/eminghuliev/following{/other_user}", "url": "https://api.github.com/users/eminghuliev", "site_admin": false, "gists_url": "https://api.github.com/users/eminghuliev/gists{/gist_id}", "node_id": "MDQ6VXNlcjE0MDEyNDA1", "starred_url": "https://api.github.com/users/eminghuliev/starred{/owner}{/repo}", "gravatar_id": "", "id": 14012405, "events_url": "https://api.github.com/users/eminghuliev/events{/privacy}", "avatar_url": "https://avatars0.githubusercontent.com/u/14012405?v=4", "login": "eminghuliev", "repos_url": "https://api.github.com/users/eminghuliev/repos", "subscriptions_url": "https://api.github.com/users/eminghuliev/subscriptions", "followers_url": "https://api.github.com/users/eminghuliev/followers", "html_url": "https://github.com/eminghuliev", "received_events_url": "https://api.github.com/users/eminghuliev/received_events", "type": "User", "organizations_url": "https://api.github.com/users/eminghuliev/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/vm-memory/issues/49", "body": "That's right it will give kinda performance when small range memory (even O(log n) in worst-case). As I know this project can be used for other purposes related to virtualization. If is there huge memory range for any other purposes, linear iteration can cause performance degradation.", "updated_at": "2019-11-17T07:46:22Z", "url": "https://api.github.com/repos/rust-vmm/vm-memory/issues/comments/554721608", "author_association": "NONE", "html_url": "https://github.com/rust-vmm/vm-memory/pull/49#issuecomment-554721608", "created_at": "2019-11-17T07:46:22Z", "id": 554721608, "node_id": "MDEyOklzc3VlQ29tbWVudDU1NDcyMTYwOA=="}, {"user": {"following_url": "https://api.github.com/users/jiangliu/following{/other_user}", "url": "https://api.github.com/users/jiangliu", "site_admin": false, "gists_url": "https://api.github.com/users/jiangliu/gists{/gist_id}", "node_id": "MDQ6VXNlcjE5MzE1MTY=", "starred_url": "https://api.github.com/users/jiangliu/starred{/owner}{/repo}", "gravatar_id": "", "id": 1931516, "events_url": "https://api.github.com/users/jiangliu/events{/privacy}", "avatar_url": "https://avatars0.githubusercontent.com/u/1931516?v=4", "login": "jiangliu", "repos_url": "https://api.github.com/users/jiangliu/repos", "subscriptions_url": "https://api.github.com/users/jiangliu/subscriptions", "followers_url": "https://api.github.com/users/jiangliu/followers", "html_url": "https://github.com/jiangliu", "received_events_url": "https://api.github.com/users/jiangliu/received_events", "type": "User", "organizations_url": "https://api.github.com/users/jiangliu/orgs"}, "issue_url": "https://api.github.com/repos/rust-vmm/vm-memory/issues/49", "body": "Thanks for the clarification:)", "updated_at": "2019-11-18T05:10:34Z", "url": "https://api.github.com/repos/rust-vmm/vm-memory/issues/comments/554854025", "author_association": "MEMBER", "html_url": "https://github.com/rust-vmm/vm-memory/pull/49#issuecomment-554854025", "created_at": "2019-11-18T05:10:34Z", "id": 554854025, "node_id": "MDEyOklzc3VlQ29tbWVudDU1NDg1NDAyNQ=="}]